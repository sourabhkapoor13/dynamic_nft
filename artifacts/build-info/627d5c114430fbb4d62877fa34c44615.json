{
	"id": "627d5c114430fbb4d62877fa34c44615",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"dynamic_nft/MinimalReceiver.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\n\r\ncontract MinimalReceiver is ERC721Holder, ERC1155Holder {\r\n    /**\r\n     * @dev Allows all Ether transfers\r\n     */\r\n    receive() external payable virtual {}\r\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_30:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_32:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_33:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_34:\n        /* \"#utility.yul\":561:584   */\n      tag_66\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_67:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_35:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_69\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_8:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_72\n      tag_31\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":833:952   */\n    tag_71:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_73\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_36:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_37:\n        /* \"#utility.yul\":1268:1289   */\n      tag_76\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_11:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_78\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_37\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_38:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_39:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_81\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_38\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_40:\n        /* \"#utility.yul\":1825:1849   */\n      tag_83\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_39\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_84:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_41:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_86\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_40\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2142   */\n    tag_42:\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2148:2250   */\n    tag_43:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2240:2242   */\n      0x1f\n        /* \"#utility.yul\":2236:2243   */\n      not\n        /* \"#utility.yul\":2231:2233   */\n      0x1f\n        /* \"#utility.yul\":2224:2229   */\n      dup4\n        /* \"#utility.yul\":2220:2234   */\n      add\n        /* \"#utility.yul\":2216:2244   */\n      and\n        /* \"#utility.yul\":2206:2244   */\n      swap1\n      pop\n        /* \"#utility.yul\":2148:2250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2256:2436   */\n    tag_44:\n        /* \"#utility.yul\":2304:2381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2294:2382   */\n      mstore\n        /* \"#utility.yul\":2401:2405   */\n      0x41\n        /* \"#utility.yul\":2398:2399   */\n      0x04\n        /* \"#utility.yul\":2391:2406   */\n      mstore\n        /* \"#utility.yul\":2425:2429   */\n      0x24\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2415:2430   */\n      revert\n        /* \"#utility.yul\":2442:2723   */\n    tag_45:\n        /* \"#utility.yul\":2525:2552   */\n      tag_91\n        /* \"#utility.yul\":2547:2551   */\n      dup3\n        /* \"#utility.yul\":2525:2552   */\n      tag_43\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2517:2523   */\n      dup2\n        /* \"#utility.yul\":2513:2553   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2643:2653   */\n      dup2\n        /* \"#utility.yul\":2640:2662   */\n      lt\n        /* \"#utility.yul\":2619:2637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2607:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2638   */\n      gt\n        /* \"#utility.yul\":2601:2663   */\n      or\n        /* \"#utility.yul\":2598:2686   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2666:2684   */\n      tag_93\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2598:2686   */\n    tag_92:\n        /* \"#utility.yul\":2706:2716   */\n      dup1\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2695:2717   */\n      mstore\n        /* \"#utility.yul\":2485:2723   */\n      pop\n        /* \"#utility.yul\":2442:2723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2858   */\n    tag_46:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2790:2810   */\n      tag_95\n      tag_30\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2780:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2819:2852   */\n      tag_96\n        /* \"#utility.yul\":2847:2851   */\n      dup3\n        /* \"#utility.yul\":2839:2845   */\n      dup3\n        /* \"#utility.yul\":2819:2852   */\n      tag_45\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2729:2858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3175   */\n    tag_47:\n        /* \"#utility.yul\":2941:2945   */\n      0x00\n        /* \"#utility.yul\":3031:3049   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3023:3029   */\n      dup3\n        /* \"#utility.yul\":3020:3050   */\n      gt\n        /* \"#utility.yul\":3017:3073   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3053:3071   */\n      tag_99\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3017:3073   */\n    tag_98:\n        /* \"#utility.yul\":3103:3107   */\n      0x20\n        /* \"#utility.yul\":3095:3101   */\n      dup3\n        /* \"#utility.yul\":3091:3108   */\n      mul\n        /* \"#utility.yul\":3083:3108   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3157:3161   */\n      dup2\n        /* \"#utility.yul\":3153:3168   */\n      add\n        /* \"#utility.yul\":3145:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:3175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3181:3298   */\n    tag_48:\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3304:3381   */\n    tag_49:\n        /* \"#utility.yul\":3341:3348   */\n      0x00\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3509   */\n    tag_50:\n        /* \"#utility.yul\":3460:3484   */\n      tag_103\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3460:3484   */\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3453:3458   */\n      dup2\n        /* \"#utility.yul\":3450:3485   */\n      eq\n        /* \"#utility.yul\":3440:3503   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3499:3500   */\n      0x00\n        /* \"#utility.yul\":3496:3497   */\n      dup1\n        /* \"#utility.yul\":3489:3501   */\n      revert\n        /* \"#utility.yul\":3440:3503   */\n    tag_104:\n        /* \"#utility.yul\":3387:3509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3654   */\n    tag_51:\n        /* \"#utility.yul\":3561:3566   */\n      0x00\n        /* \"#utility.yul\":3599:3605   */\n      dup2\n        /* \"#utility.yul\":3586:3606   */\n      calldataload\n        /* \"#utility.yul\":3577:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3615:3648   */\n      tag_106\n        /* \"#utility.yul\":3642:3647   */\n      dup2\n        /* \"#utility.yul\":3615:3648   */\n      tag_50\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3515:3654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:4387   */\n    tag_52:\n        /* \"#utility.yul\":3773:3778   */\n      0x00\n        /* \"#utility.yul\":3798:3879   */\n      tag_108\n        /* \"#utility.yul\":3814:3878   */\n      tag_109\n        /* \"#utility.yul\":3871:3877   */\n      dup5\n        /* \"#utility.yul\":3814:3878   */\n      tag_47\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3798:3879   */\n      tag_46\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3789:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3904   */\n      dup1\n        /* \"#utility.yul\":3928:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3926   */\n      dup3\n        /* \"#utility.yul\":3914:3935   */\n      mstore\n        /* \"#utility.yul\":3962:3966   */\n      0x20\n        /* \"#utility.yul\":3955:3960   */\n      dup3\n        /* \"#utility.yul\":3951:3967   */\n      add\n        /* \"#utility.yul\":3944:3967   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4019   */\n      0x20\n        /* \"#utility.yul\":4007:4013   */\n      dup5\n        /* \"#utility.yul\":4003:4020   */\n      mul\n        /* \"#utility.yul\":3995:4001   */\n      dup4\n        /* \"#utility.yul\":3991:4021   */\n      add\n        /* \"#utility.yul\":4044:4047   */\n      dup6\n        /* \"#utility.yul\":4036:4042   */\n      dup2\n        /* \"#utility.yul\":4033:4048   */\n      gt\n        /* \"#utility.yul\":4030:4152   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4063:4142   */\n      tag_111\n      tag_48\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4030:4152   */\n    tag_110:\n        /* \"#utility.yul\":4178:4184   */\n      dup4\n        /* \"#utility.yul\":4161:4381   */\n    tag_112:\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4193   */\n      dup2\n        /* \"#utility.yul\":4187:4202   */\n      lt\n        /* \"#utility.yul\":4161:4381   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4270:4273   */\n      dup1\n        /* \"#utility.yul\":4299:4336   */\n      tag_115\n        /* \"#utility.yul\":4332:4335   */\n      dup9\n        /* \"#utility.yul\":4320:4330   */\n      dup3\n        /* \"#utility.yul\":4299:4336   */\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4294:4297   */\n      dup5\n        /* \"#utility.yul\":4287:4337   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x20\n        /* \"#utility.yul\":4361:4364   */\n      dup5\n        /* \"#utility.yul\":4357:4371   */\n      add\n        /* \"#utility.yul\":4350:4371   */\n      swap4\n      pop\n        /* \"#utility.yul\":4237:4381   */\n      pop\n        /* \"#utility.yul\":4221:4225   */\n      0x20\n        /* \"#utility.yul\":4216:4219   */\n      dup2\n        /* \"#utility.yul\":4212:4226   */\n      add\n        /* \"#utility.yul\":4205:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4161:4381   */\n      jump(tag_112)\n    tag_114:\n        /* \"#utility.yul\":4165:4186   */\n      pop\n        /* \"#utility.yul\":3779:4387   */\n      pop\n      pop\n        /* \"#utility.yul\":3677:4387   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4780   */\n    tag_53:\n        /* \"#utility.yul\":4481:4486   */\n      0x00\n        /* \"#utility.yul\":4530:4533   */\n      dup3\n        /* \"#utility.yul\":4523:4527   */\n      0x1f\n        /* \"#utility.yul\":4515:4521   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4507:4534   */\n      slt\n        /* \"#utility.yul\":4497:4619   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4538:4617   */\n      tag_118\n      tag_42\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4497:4619   */\n    tag_117:\n        /* \"#utility.yul\":4655:4661   */\n      dup2\n        /* \"#utility.yul\":4642:4662   */\n      calldataload\n        /* \"#utility.yul\":4680:4774   */\n      tag_119\n        /* \"#utility.yul\":4770:4773   */\n      dup5\n        /* \"#utility.yul\":4762:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4759   */\n      0x20\n        /* \"#utility.yul\":4747:4753   */\n      dup7\n        /* \"#utility.yul\":4743:4760   */\n      add\n        /* \"#utility.yul\":4680:4774   */\n      tag_52\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4671:4774   */\n      swap2\n      pop\n        /* \"#utility.yul\":4487:4780   */\n      pop\n        /* \"#utility.yul\":4410:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4903   */\n    tag_54:\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4892:4893   */\n      dup1\n        /* \"#utility.yul\":4885:4897   */\n      revert\n        /* \"#utility.yul\":4909:5216   */\n    tag_55:\n        /* \"#utility.yul\":4970:4974   */\n      0x00\n        /* \"#utility.yul\":5060:5078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5049:5079   */\n      gt\n        /* \"#utility.yul\":5046:5102   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5082:5100   */\n      tag_123\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5046:5102   */\n    tag_122:\n        /* \"#utility.yul\":5120:5149   */\n      tag_124\n        /* \"#utility.yul\":5142:5148   */\n      dup3\n        /* \"#utility.yul\":5120:5149   */\n      tag_43\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5112:5149   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x20\n        /* \"#utility.yul\":5198:5202   */\n      dup2\n        /* \"#utility.yul\":5194:5209   */\n      add\n        /* \"#utility.yul\":5186:5209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5368   */\n    tag_56:\n        /* \"#utility.yul\":5319:5325   */\n      dup3\n        /* \"#utility.yul\":5314:5317   */\n      dup2\n        /* \"#utility.yul\":5309:5312   */\n      dup4\n        /* \"#utility.yul\":5296:5326   */\n      calldatacopy\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5351:5357   */\n      dup4\n        /* \"#utility.yul\":5346:5349   */\n      dup4\n        /* \"#utility.yul\":5342:5358   */\n      add\n        /* \"#utility.yul\":5335:5362   */\n      mstore\n        /* \"#utility.yul\":5222:5368   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5374:5797   */\n    tag_57:\n        /* \"#utility.yul\":5451:5456   */\n      0x00\n        /* \"#utility.yul\":5476:5541   */\n      tag_127\n        /* \"#utility.yul\":5492:5540   */\n      tag_128\n        /* \"#utility.yul\":5533:5539   */\n      dup5\n        /* \"#utility.yul\":5492:5540   */\n      tag_55\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5476:5541   */\n      tag_46\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5467:5541   */\n      swap1\n      pop\n        /* \"#utility.yul\":5564:5570   */\n      dup3\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5550:5571   */\n      mstore\n        /* \"#utility.yul\":5602:5606   */\n      0x20\n        /* \"#utility.yul\":5595:5600   */\n      dup2\n        /* \"#utility.yul\":5591:5607   */\n      add\n        /* \"#utility.yul\":5640:5643   */\n      dup5\n        /* \"#utility.yul\":5631:5637   */\n      dup5\n        /* \"#utility.yul\":5626:5629   */\n      dup5\n        /* \"#utility.yul\":5622:5638   */\n      add\n        /* \"#utility.yul\":5619:5644   */\n      gt\n        /* \"#utility.yul\":5616:5728   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5647:5726   */\n      tag_130\n      tag_54\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5616:5728   */\n    tag_129:\n        /* \"#utility.yul\":5737:5791   */\n      tag_131\n        /* \"#utility.yul\":5784:5790   */\n      dup5\n        /* \"#utility.yul\":5779:5782   */\n      dup3\n        /* \"#utility.yul\":5774:5777   */\n      dup6\n        /* \"#utility.yul\":5737:5791   */\n      tag_56\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5457:5797   */\n      pop\n        /* \"#utility.yul\":5374:5797   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:6154   */\n    tag_58:\n        /* \"#utility.yul\":5871:5876   */\n      0x00\n        /* \"#utility.yul\":5920:5923   */\n      dup3\n        /* \"#utility.yul\":5913:5917   */\n      0x1f\n        /* \"#utility.yul\":5905:5911   */\n      dup4\n        /* \"#utility.yul\":5901:5918   */\n      add\n        /* \"#utility.yul\":5897:5924   */\n      slt\n        /* \"#utility.yul\":5887:6009   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5928:6007   */\n      tag_134\n      tag_42\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5887:6009   */\n    tag_133:\n        /* \"#utility.yul\":6045:6051   */\n      dup2\n        /* \"#utility.yul\":6032:6052   */\n      calldataload\n        /* \"#utility.yul\":6070:6148   */\n      tag_135\n        /* \"#utility.yul\":6144:6147   */\n      dup5\n        /* \"#utility.yul\":6136:6142   */\n      dup3\n        /* \"#utility.yul\":6129:6133   */\n      0x20\n        /* \"#utility.yul\":6121:6127   */\n      dup7\n        /* \"#utility.yul\":6117:6134   */\n      add\n        /* \"#utility.yul\":6070:6148   */\n      tag_57\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6061:6148   */\n      swap2\n      pop\n        /* \"#utility.yul\":5877:6154   */\n      pop\n        /* \"#utility.yul\":5816:6154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6160:7669   */\n    tag_14:\n        /* \"#utility.yul\":6314:6320   */\n      0x00\n        /* \"#utility.yul\":6322:6328   */\n      dup1\n        /* \"#utility.yul\":6330:6336   */\n      0x00\n        /* \"#utility.yul\":6338:6344   */\n      dup1\n        /* \"#utility.yul\":6346:6352   */\n      0x00\n        /* \"#utility.yul\":6395:6398   */\n      0xa0\n        /* \"#utility.yul\":6383:6392   */\n      dup7\n        /* \"#utility.yul\":6374:6381   */\n      dup9\n        /* \"#utility.yul\":6370:6393   */\n      sub\n        /* \"#utility.yul\":6366:6399   */\n      slt\n        /* \"#utility.yul\":6363:6483   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6402:6481   */\n      tag_138\n      tag_31\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6363:6483   */\n    tag_137:\n        /* \"#utility.yul\":6522:6523   */\n      0x00\n        /* \"#utility.yul\":6547:6600   */\n      tag_139\n        /* \"#utility.yul\":6592:6599   */\n      dup9\n        /* \"#utility.yul\":6583:6589   */\n      dup3\n        /* \"#utility.yul\":6572:6581   */\n      dup10\n        /* \"#utility.yul\":6568:6590   */\n      add\n        /* \"#utility.yul\":6547:6600   */\n      tag_41\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6537:6600   */\n      swap6\n      pop\n        /* \"#utility.yul\":6493:6610   */\n      pop\n        /* \"#utility.yul\":6649:6651   */\n      0x20\n        /* \"#utility.yul\":6675:6728   */\n      tag_140\n        /* \"#utility.yul\":6720:6727   */\n      dup9\n        /* \"#utility.yul\":6711:6717   */\n      dup3\n        /* \"#utility.yul\":6700:6709   */\n      dup10\n        /* \"#utility.yul\":6696:6718   */\n      add\n        /* \"#utility.yul\":6675:6728   */\n      tag_41\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6665:6728   */\n      swap5\n      pop\n        /* \"#utility.yul\":6620:6738   */\n      pop\n        /* \"#utility.yul\":6805:6807   */\n      0x40\n        /* \"#utility.yul\":6794:6803   */\n      dup7\n        /* \"#utility.yul\":6790:6808   */\n      add\n        /* \"#utility.yul\":6777:6809   */\n      calldataload\n        /* \"#utility.yul\":6836:6854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6828:6834   */\n      dup2\n        /* \"#utility.yul\":6825:6855   */\n      gt\n        /* \"#utility.yul\":6822:6939   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6858:6937   */\n      tag_142\n      tag_32\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6822:6939   */\n    tag_141:\n        /* \"#utility.yul\":6963:7041   */\n      tag_143\n        /* \"#utility.yul\":7033:7040   */\n      dup9\n        /* \"#utility.yul\":7024:7030   */\n      dup3\n        /* \"#utility.yul\":7013:7022   */\n      dup10\n        /* \"#utility.yul\":7009:7031   */\n      add\n        /* \"#utility.yul\":6963:7041   */\n      tag_53\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6953:7041   */\n      swap4\n      pop\n        /* \"#utility.yul\":6748:7051   */\n      pop\n        /* \"#utility.yul\":7118:7120   */\n      0x60\n        /* \"#utility.yul\":7107:7116   */\n      dup7\n        /* \"#utility.yul\":7103:7121   */\n      add\n        /* \"#utility.yul\":7090:7122   */\n      calldataload\n        /* \"#utility.yul\":7149:7167   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7141:7147   */\n      dup2\n        /* \"#utility.yul\":7138:7168   */\n      gt\n        /* \"#utility.yul\":7135:7252   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":7171:7250   */\n      tag_145\n      tag_32\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7135:7252   */\n    tag_144:\n        /* \"#utility.yul\":7276:7354   */\n      tag_146\n        /* \"#utility.yul\":7346:7353   */\n      dup9\n        /* \"#utility.yul\":7337:7343   */\n      dup3\n        /* \"#utility.yul\":7326:7335   */\n      dup10\n        /* \"#utility.yul\":7322:7344   */\n      add\n        /* \"#utility.yul\":7276:7354   */\n      tag_53\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7266:7354   */\n      swap3\n      pop\n        /* \"#utility.yul\":7061:7364   */\n      pop\n        /* \"#utility.yul\":7431:7434   */\n      0x80\n        /* \"#utility.yul\":7420:7429   */\n      dup7\n        /* \"#utility.yul\":7416:7435   */\n      add\n        /* \"#utility.yul\":7403:7436   */\n      calldataload\n        /* \"#utility.yul\":7463:7481   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7455:7461   */\n      dup2\n        /* \"#utility.yul\":7452:7482   */\n      gt\n        /* \"#utility.yul\":7449:7566   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":7485:7564   */\n      tag_148\n      tag_32\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7449:7566   */\n    tag_147:\n        /* \"#utility.yul\":7590:7652   */\n      tag_149\n        /* \"#utility.yul\":7644:7651   */\n      dup9\n        /* \"#utility.yul\":7635:7641   */\n      dup3\n        /* \"#utility.yul\":7624:7633   */\n      dup10\n        /* \"#utility.yul\":7620:7642   */\n      add\n        /* \"#utility.yul\":7590:7652   */\n      tag_58\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7580:7652   */\n      swap2\n      pop\n        /* \"#utility.yul\":7374:7662   */\n      pop\n        /* \"#utility.yul\":6160:7669   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7675:7790   */\n    tag_59:\n        /* \"#utility.yul\":7760:7783   */\n      tag_151\n        /* \"#utility.yul\":7777:7782   */\n      dup2\n        /* \"#utility.yul\":7760:7783   */\n      tag_33\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7755:7758   */\n      dup3\n        /* \"#utility.yul\":7748:7784   */\n      mstore\n        /* \"#utility.yul\":7675:7790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7796:8014   */\n    tag_17:\n        /* \"#utility.yul\":7887:7891   */\n      0x00\n        /* \"#utility.yul\":7925:7927   */\n      0x20\n        /* \"#utility.yul\":7914:7923   */\n      dup3\n        /* \"#utility.yul\":7910:7928   */\n      add\n        /* \"#utility.yul\":7902:7928   */\n      swap1\n      pop\n        /* \"#utility.yul\":7938:8007   */\n      tag_153\n        /* \"#utility.yul\":8004:8005   */\n      0x00\n        /* \"#utility.yul\":7993:8002   */\n      dup4\n        /* \"#utility.yul\":7989:8006   */\n      add\n        /* \"#utility.yul\":7980:7986   */\n      dup5\n        /* \"#utility.yul\":7938:8007   */\n      tag_59\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7796:8014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:9109   */\n    tag_20:\n        /* \"#utility.yul\":8124:8130   */\n      0x00\n        /* \"#utility.yul\":8132:8138   */\n      dup1\n        /* \"#utility.yul\":8140:8146   */\n      0x00\n        /* \"#utility.yul\":8148:8154   */\n      dup1\n        /* \"#utility.yul\":8156:8162   */\n      0x00\n        /* \"#utility.yul\":8205:8208   */\n      0xa0\n        /* \"#utility.yul\":8193:8202   */\n      dup7\n        /* \"#utility.yul\":8184:8191   */\n      dup9\n        /* \"#utility.yul\":8180:8203   */\n      sub\n        /* \"#utility.yul\":8176:8209   */\n      slt\n        /* \"#utility.yul\":8173:8293   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":8212:8291   */\n      tag_156\n      tag_31\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8173:8293   */\n    tag_155:\n        /* \"#utility.yul\":8332:8333   */\n      0x00\n        /* \"#utility.yul\":8357:8410   */\n      tag_157\n        /* \"#utility.yul\":8402:8409   */\n      dup9\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8382:8391   */\n      dup10\n        /* \"#utility.yul\":8378:8400   */\n      add\n        /* \"#utility.yul\":8357:8410   */\n      tag_41\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8347:8410   */\n      swap6\n      pop\n        /* \"#utility.yul\":8303:8420   */\n      pop\n        /* \"#utility.yul\":8459:8461   */\n      0x20\n        /* \"#utility.yul\":8485:8538   */\n      tag_158\n        /* \"#utility.yul\":8530:8537   */\n      dup9\n        /* \"#utility.yul\":8521:8527   */\n      dup3\n        /* \"#utility.yul\":8510:8519   */\n      dup10\n        /* \"#utility.yul\":8506:8528   */\n      add\n        /* \"#utility.yul\":8485:8538   */\n      tag_41\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8475:8538   */\n      swap5\n      pop\n        /* \"#utility.yul\":8430:8548   */\n      pop\n        /* \"#utility.yul\":8587:8589   */\n      0x40\n        /* \"#utility.yul\":8613:8666   */\n      tag_159\n        /* \"#utility.yul\":8658:8665   */\n      dup9\n        /* \"#utility.yul\":8649:8655   */\n      dup3\n        /* \"#utility.yul\":8638:8647   */\n      dup10\n        /* \"#utility.yul\":8634:8656   */\n      add\n        /* \"#utility.yul\":8613:8666   */\n      tag_51\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8603:8666   */\n      swap4\n      pop\n        /* \"#utility.yul\":8558:8676   */\n      pop\n        /* \"#utility.yul\":8715:8717   */\n      0x60\n        /* \"#utility.yul\":8741:8794   */\n      tag_160\n        /* \"#utility.yul\":8786:8793   */\n      dup9\n        /* \"#utility.yul\":8777:8783   */\n      dup3\n        /* \"#utility.yul\":8766:8775   */\n      dup10\n        /* \"#utility.yul\":8762:8784   */\n      add\n        /* \"#utility.yul\":8741:8794   */\n      tag_51\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8731:8794   */\n      swap3\n      pop\n        /* \"#utility.yul\":8686:8804   */\n      pop\n        /* \"#utility.yul\":8871:8874   */\n      0x80\n        /* \"#utility.yul\":8860:8869   */\n      dup7\n        /* \"#utility.yul\":8856:8875   */\n      add\n        /* \"#utility.yul\":8843:8876   */\n      calldataload\n        /* \"#utility.yul\":8903:8921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8895:8901   */\n      dup2\n        /* \"#utility.yul\":8892:8922   */\n      gt\n        /* \"#utility.yul\":8889:9006   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":8925:9004   */\n      tag_162\n      tag_32\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8889:9006   */\n    tag_161:\n        /* \"#utility.yul\":9030:9092   */\n      tag_163\n        /* \"#utility.yul\":9084:9091   */\n      dup9\n        /* \"#utility.yul\":9075:9081   */\n      dup3\n        /* \"#utility.yul\":9064:9073   */\n      dup10\n        /* \"#utility.yul\":9060:9082   */\n      add\n        /* \"#utility.yul\":9030:9092   */\n      tag_58\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":9020:9092   */\n      swap2\n      pop\n        /* \"#utility.yul\":8814:9102   */\n      pop\n        /* \"#utility.yul\":8020:9109   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c1d94a8a7ed0d4a560df1f8ff09af0973ad2d5e9aa79a6bd4bef48675d732ed64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061071b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212202c1d94a8a7ed0d4a560df1f8ff09af0973ad2d5e9aa79a6bd4bef48675d732ed64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SAR SWAP5 0xA8 0xA7 0xED 0xD 0x4A JUMP 0xD CALL 0xF8 SELFDESTRUCT MULMOD 0xAF MULMOD PUSH20 0xAD2D5E9AA79A6BD4BEF48675D732ED64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "451:522:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_90": {
									"entryPoint": 336,
									"id": 90,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_67": {
									"entryPoint": 357,
									"id": 67,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_124": {
									"entryPoint": 214,
									"id": 124,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_193": {
									"entryPoint": 378,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9112:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:8",
														"type": ""
													}
												],
												"src": "334:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:8"
															},
															"nodeType": "YulIf",
															"src": "541:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:8",
														"type": ""
													}
												],
												"src": "489:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:8",
														"type": ""
													}
												],
												"src": "615:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nodeType": "YulIf",
															"src": "833:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:8",
														"type": ""
													}
												],
												"src": "758:327:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:8",
														"type": ""
													}
												],
												"src": "1091:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:8",
														"type": ""
													}
												],
												"src": "1187:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:8",
														"type": ""
													}
												],
												"src": "1302:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:8",
														"type": ""
													}
												],
												"src": "1518:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:8",
														"type": ""
													}
												],
												"src": "1650:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:8"
															},
															"nodeType": "YulIf",
															"src": "1805:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:8",
														"type": ""
													}
												],
												"src": "1752:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:8",
														"type": ""
													}
												],
												"src": "1880:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2025:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2240:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													}
												],
												"src": "2148:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2256:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2495:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2547:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2525:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2499:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2666:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2607:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2643:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:62:8"
															},
															"nodeType": "YulIf",
															"src": "2598:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2706:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2471:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2479:4:8",
														"type": ""
													}
												],
												"src": "2442:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2780:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2790:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2847:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2819:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2754:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2763:6:8",
														"type": ""
													}
												],
												"src": "2729:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3053:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:30:8"
															},
															"nodeType": "YulIf",
															"src": "3017:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3095:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3083:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3145:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3157:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3145:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2930:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2941:4:8",
														"type": ""
													}
												],
												"src": "2864:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3181:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3370:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3359:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3341:7:8",
														"type": ""
													}
												],
												"src": "3304:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3430:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3487:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3499:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3489:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3453:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3460:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3460:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3450:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:43:8"
															},
															"nodeType": "YulIf",
															"src": "3440:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:8",
														"type": ""
													}
												],
												"src": "3387:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3586:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3577:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3642:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3615:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3553:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3561:5:8",
														"type": ""
													}
												],
												"src": "3515:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3779:608:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3789:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3871:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3814:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3798:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3789:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3899:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3892:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3921:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3914:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4007:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3981:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4063:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4063:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4063:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4033:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:15:8"
															},
															"nodeType": "YulIf",
															"src": "4030:122:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:144:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4252:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4256:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4294:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4320:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4332:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "4299:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4299:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4350:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4357:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4350:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4190:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4203:25:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4205:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4216:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4212:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4212:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4205:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4165:21:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4167:17:8",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4171:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4161:220:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3749:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3757:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3765:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3773:5:8",
														"type": ""
													}
												],
												"src": "3677:710:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4536:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4538:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4538:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4515:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4523:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4511:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4511:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4530:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:35:8"
															},
															"nodeType": "YulIf",
															"src": "4497:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4628:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4655:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4642:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4632:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4671:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4747:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4762:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4680:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4671:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4465:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4473:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4481:5:8",
														"type": ""
													}
												],
												"src": "4410:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4875:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4895:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4885:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4786:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5082:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5052:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5049:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:30:8"
															},
															"nodeType": "YulIf",
															"src": "5046:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5112:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5120:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5198:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4959:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4970:4:8",
														"type": ""
													}
												],
												"src": "4909:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5309:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5319:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5296:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5296:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5296:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5346:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5268:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5273:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5278:6:8",
														"type": ""
													}
												],
												"src": "5222:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5457:340:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5467:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5533:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5492:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5476:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5467:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5557:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5564:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5580:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5595:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5602:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5584:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5645:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5647:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5647:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5647:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5626:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5631:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5640:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:25:8"
															},
															"nodeType": "YulIf",
															"src": "5616:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5779:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5784:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5737:36:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5430:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5435:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5443:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5451:5:8",
														"type": ""
													}
												],
												"src": "5374:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5877:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5926:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5928:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5928:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5928:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5905:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5913:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5901:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5901:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5920:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5897:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5897:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:35:8"
															},
															"nodeType": "YulIf",
															"src": "5887:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6018:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6045:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6032:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6022:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6061:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6129:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6144:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6070:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6061:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5855:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5863:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5871:5:8",
														"type": ""
													}
												],
												"src": "5816:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6353:1316:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6400:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6402:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6374:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6383:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6370:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6370:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:33:8"
															},
															"nodeType": "YulIf",
															"src": "6363:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6493:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6537:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6572:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6583:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6568:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6592:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6547:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6537:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6620:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6635:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6639:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6665:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6700:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6711:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6696:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6696:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6720:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6675:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6675:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6665:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6748:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6763:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6794:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6805:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6790:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6790:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6777:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6767:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6856:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6858:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6858:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6858:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6828:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6825:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6825:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "6822:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6953:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7013:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7024:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7009:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7009:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7033:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6963:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6963:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6953:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7061:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7076:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7107:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7118:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7103:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7090:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7169:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7171:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7171:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7171:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7141:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7149:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7138:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7135:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7266:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7326:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7337:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7322:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7322:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7346:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7276:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7276:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7266:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7374:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7389:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7420:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7431:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7416:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7416:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7403:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7393:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7483:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7485:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7485:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7485:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7455:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7452:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7449:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7580:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7624:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7635:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7620:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7620:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7644:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7590:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7590:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7580:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6291:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6302:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6314:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6322:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6330:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6338:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6346:6:8",
														"type": ""
													}
												],
												"src": "6160:1509:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7738:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7755:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7777:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7760:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7760:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:36:8"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7726:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7733:3:8",
														"type": ""
													}
												],
												"src": "7675:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7902:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7914:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7910:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7910:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7902:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7980:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7993:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8004:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7938:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7864:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7876:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7887:4:8",
														"type": ""
													}
												],
												"src": "7796:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8163:946:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8210:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8212:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8212:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8212:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8184:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8193:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8205:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8176:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:33:8"
															},
															"nodeType": "YulIf",
															"src": "8173:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8303:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8318:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8332:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8322:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8347:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8382:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8393:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8378:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8378:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8402:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8357:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8347:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8430:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8445:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8459:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8449:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8475:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8510:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8521:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8506:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8506:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8530:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8485:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8485:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8475:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8558:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8573:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8587:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8577:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8603:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8638:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8649:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8634:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8634:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8658:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8613:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8613:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8603:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8686:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8701:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8715:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8705:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8731:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8766:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8777:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8762:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8762:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8786:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8741:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8741:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8731:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8814:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8829:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8860:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8871:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8856:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8843:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8843:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8833:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8923:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8925:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8925:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8925:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8895:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8892:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8889:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9020:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9064:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9075:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9060:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9060:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9030:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9020:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8101:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8112:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8124:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8132:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8140:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8148:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8156:6:8",
														"type": ""
													}
												],
												"src": "8020:1089:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212202c1d94a8a7ed0d4a560df1f8ff09af0973ad2d5e9aa79a6bd4bef48675d732ed64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SAR SWAP5 0xA8 0xA7 0xED 0xD 0x4A JUMP 0xD CALL 0xF8 SELFDESTRUCT MULMOD 0xAF MULMOD PUSH20 0xAD2D5E9AA79A6BD4BEF48675D732ED64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "451:522:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:2;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:1:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:102;2189:6;2240:2;2236:7;2231:2;2224:5;2220:14;2216:28;2206:38;;2148:102;;;:::o;2256:180::-;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:281;2525:27;2547:4;2525:27;:::i;:::-;2517:6;2513:40;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2598:88;2706:10;2702:2;2695:22;2485:238;2442:281;;:::o;2729:129::-;2763:6;2790:20;;:::i;:::-;2780:30;;2819:33;2847:4;2839:6;2819:33;:::i;:::-;2729:129;;;:::o;2864:311::-;2941:4;3031:18;3023:6;3020:30;3017:56;;;3053:18;;:::i;:::-;3017:56;3103:4;3095:6;3091:17;3083:25;;3163:4;3157;3153:15;3145:23;;2864:311;;;:::o;3181:117::-;3290:1;3287;3280:12;3304:77;3341:7;3370:5;3359:16;;3304:77;;;:::o;3387:122::-;3460:24;3478:5;3460:24;:::i;:::-;3453:5;3450:35;3440:63;;3499:1;3496;3489:12;3440:63;3387:122;:::o;3515:139::-;3561:5;3599:6;3586:20;3577:29;;3615:33;3642:5;3615:33;:::i;:::-;3515:139;;;;:::o;3677:710::-;3773:5;3798:81;3814:64;3871:6;3814:64;:::i;:::-;3798:81;:::i;:::-;3789:90;;3899:5;3928:6;3921:5;3914:21;3962:4;3955:5;3951:16;3944:23;;4015:4;4007:6;4003:17;3995:6;3991:30;4044:3;4036:6;4033:15;4030:122;;;4063:79;;:::i;:::-;4030:122;4178:6;4161:220;4195:6;4190:3;4187:15;4161:220;;;4270:3;4299:37;4332:3;4320:10;4299:37;:::i;:::-;4294:3;4287:50;4366:4;4361:3;4357:14;4350:21;;4237:144;4221:4;4216:3;4212:14;4205:21;;4161:220;;;4165:21;3779:608;;3677:710;;;;;:::o;4410:370::-;4481:5;4530:3;4523:4;4515:6;4511:17;4507:27;4497:122;;4538:79;;:::i;:::-;4497:122;4655:6;4642:20;4680:94;4770:3;4762:6;4755:4;4747:6;4743:17;4680:94;:::i;:::-;4671:103;;4487:293;4410:370;;;;:::o;4786:117::-;4895:1;4892;4885:12;4909:307;4970:4;5060:18;5052:6;5049:30;5046:56;;;5082:18;;:::i;:::-;5046:56;5120:29;5142:6;5120:29;:::i;:::-;5112:37;;5204:4;5198;5194:15;5186:23;;4909:307;;;:::o;5222:146::-;5319:6;5314:3;5309;5296:30;5360:1;5351:6;5346:3;5342:16;5335:27;5222:146;;;:::o;5374:423::-;5451:5;5476:65;5492:48;5533:6;5492:48;:::i;:::-;5476:65;:::i;:::-;5467:74;;5564:6;5557:5;5550:21;5602:4;5595:5;5591:16;5640:3;5631:6;5626:3;5622:16;5619:25;5616:112;;;5647:79;;:::i;:::-;5616:112;5737:54;5784:6;5779:3;5774;5737:54;:::i;:::-;5457:340;5374:423;;;;;:::o;5816:338::-;5871:5;5920:3;5913:4;5905:6;5901:17;5897:27;5887:122;;5928:79;;:::i;:::-;5887:122;6045:6;6032:20;6070:78;6144:3;6136:6;6129:4;6121:6;6117:17;6070:78;:::i;:::-;6061:87;;5877:277;5816:338;;;;:::o;6160:1509::-;6314:6;6322;6330;6338;6346;6395:3;6383:9;6374:7;6370:23;6366:33;6363:120;;;6402:79;;:::i;:::-;6363:120;6522:1;6547:53;6592:7;6583:6;6572:9;6568:22;6547:53;:::i;:::-;6537:63;;6493:117;6649:2;6675:53;6720:7;6711:6;6700:9;6696:22;6675:53;:::i;:::-;6665:63;;6620:118;6805:2;6794:9;6790:18;6777:32;6836:18;6828:6;6825:30;6822:117;;;6858:79;;:::i;:::-;6822:117;6963:78;7033:7;7024:6;7013:9;7009:22;6963:78;:::i;:::-;6953:88;;6748:303;7118:2;7107:9;7103:18;7090:32;7149:18;7141:6;7138:30;7135:117;;;7171:79;;:::i;:::-;7135:117;7276:78;7346:7;7337:6;7326:9;7322:22;7276:78;:::i;:::-;7266:88;;7061:303;7431:3;7420:9;7416:19;7403:33;7463:18;7455:6;7452:30;7449:117;;;7485:79;;:::i;:::-;7449:117;7590:62;7644:7;7635:6;7624:9;7620:22;7590:62;:::i;:::-;7580:72;;7374:288;6160:1509;;;;;;;;:::o;7675:115::-;7760:23;7777:5;7760:23;:::i;:::-;7755:3;7748:36;7675:115;;:::o;7796:218::-;7887:4;7925:2;7914:9;7910:18;7902:26;;7938:69;8004:1;7993:9;7989:17;7980:6;7938:69;:::i;:::-;7796:218;;;;:::o;8020:1089::-;8124:6;8132;8140;8148;8156;8205:3;8193:9;8184:7;8180:23;8176:33;8173:120;;;8212:79;;:::i;:::-;8173:120;8332:1;8357:53;8402:7;8393:6;8382:9;8378:22;8357:53;:::i;:::-;8347:63;;8303:117;8459:2;8485:53;8530:7;8521:6;8510:9;8506:22;8485:53;:::i;:::-;8475:63;;8430:118;8587:2;8613:53;8658:7;8649:6;8638:9;8634:22;8613:53;:::i;:::-;8603:63;;8558:118;8715:2;8741:53;8786:7;8777:6;8766:9;8762:22;8741:53;:::i;:::-;8731:63;;8686:118;8871:3;8860:9;8856:19;8843:33;8903:18;8895:6;8892:30;8889:117;;;8925:79;;:::i;:::-;8889:117;9030:62;9084:7;9075:6;9064:9;9060:22;9030:62;:::i;:::-;9020:72;;8814:288;8020:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363800",
								"executionCost": "399",
								"totalCost": "364199"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c1d94a8a7ed0d4a560df1f8ff09af0973ad2d5e9aa79a6bd4bef48675d732ed64736f6c63430008130033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2216,
											"end": 2244,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2381,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2382,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2430,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2525,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2663,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2666,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2790,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2819,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 3175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3304,
											"end": 3381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3460,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3489,
											"end": 3501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3606,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3615,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3899,
											"end": 3904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 3967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3991,
											"end": 4021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4063,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4299,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4287,
											"end": 4337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3677,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4534,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4538,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4662,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4760,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4680,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5049,
											"end": 5079,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5082,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5326,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5357,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5346,
											"end": 5349,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5451,
											"end": 5456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 5492,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5476,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5606,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5595,
											"end": 5600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5643,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5619,
											"end": 5644,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5647,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 5737,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5457,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 5917,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5901,
											"end": 5918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5897,
											"end": 5924,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5928,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6129,
											"end": 6133,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 6070,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 6154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6381,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6399,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 6402,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6592,
											"end": 6599,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6568,
											"end": 6590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6547,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6493,
											"end": 6610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6720,
											"end": 6727,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6696,
											"end": 6718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6675,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6620,
											"end": 6738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6809,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6825,
											"end": 6855,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6858,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7022,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7009,
											"end": 7031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 6963,
											"end": 7041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6953,
											"end": 7041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6953,
											"end": 7041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 7051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7168,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7171,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7346,
											"end": 7353,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7326,
											"end": 7335,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7322,
											"end": 7344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7276,
											"end": 7354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7354,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7416,
											"end": 7435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7436,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7452,
											"end": 7482,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7485,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7590,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7777,
											"end": 7782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7760,
											"end": 7783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7748,
											"end": 7784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7902,
											"end": 7928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7902,
											"end": 7928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 8004,
											"end": 8005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 8006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 7938,
											"end": 8007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 8014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8208,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8191,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8209,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 8212,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8402,
											"end": 8409,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 8357,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8410,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8347,
											"end": 8410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8530,
											"end": 8537,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8519,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 8485,
											"end": 8538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8475,
											"end": 8538,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8475,
											"end": 8538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8430,
											"end": 8548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 8613,
											"end": 8666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8558,
											"end": 8676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 8741,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8871,
											"end": 8874,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8876,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8922,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8925,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9073,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9060,
											"end": 9082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 9030,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8814,
											"end": 9102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 9109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"dynamic_nft/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":414:767  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":414:767  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":703:709  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":728:758  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":721:758  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_11:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_23:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_24:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_25:\n        /* \"#utility.yul\":1820:1847   */\n      tag_56\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1893:1981   */\n    tag_57:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_26:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_60\n      tag_11\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_61\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_27:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_64\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2296:2352   */\n    tag_63:\n        /* \"#utility.yul\":2370:2399   */\n      tag_65\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2618   */\n    tag_28:\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2564:2567   */\n      dup2\n        /* \"#utility.yul\":2559:2562   */\n      dup4\n        /* \"#utility.yul\":2546:2576   */\n      calldatacopy\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup4\n        /* \"#utility.yul\":2596:2599   */\n      dup4\n        /* \"#utility.yul\":2592:2608   */\n      add\n        /* \"#utility.yul\":2585:2612   */\n      mstore\n        /* \"#utility.yul\":2472:2618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3047   */\n    tag_29:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2791   */\n      tag_68\n        /* \"#utility.yul\":2742:2790   */\n      tag_69\n        /* \"#utility.yul\":2783:2789   */\n      dup5\n        /* \"#utility.yul\":2742:2790   */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2726:2791   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2717:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2852:2856   */\n      0x20\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2841:2857   */\n      add\n        /* \"#utility.yul\":2890:2893   */\n      dup5\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2879   */\n      dup5\n        /* \"#utility.yul\":2872:2888   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      gt\n        /* \"#utility.yul\":2866:2978   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2897:2976   */\n      tag_71\n      tag_22\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2866:2978   */\n    tag_70:\n        /* \"#utility.yul\":2987:3041   */\n      tag_72\n        /* \"#utility.yul\":3034:3040   */\n      dup5\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2987:3041   */\n      tag_28\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2707:3047   */\n      pop\n        /* \"#utility.yul\":2624:3047   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3404   */\n    tag_30:\n        /* \"#utility.yul\":3121:3126   */\n      0x00\n        /* \"#utility.yul\":3170:3173   */\n      dup3\n        /* \"#utility.yul\":3163:3167   */\n      0x1f\n        /* \"#utility.yul\":3155:3161   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3147:3174   */\n      slt\n        /* \"#utility.yul\":3137:3259   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_75\n      tag_21\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3137:3259   */\n    tag_74:\n        /* \"#utility.yul\":3295:3301   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      calldataload\n        /* \"#utility.yul\":3320:3398   */\n      tag_76\n        /* \"#utility.yul\":3394:3397   */\n      dup5\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3320:3398   */\n      tag_29\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3311:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3404   */\n      pop\n        /* \"#utility.yul\":3066:3404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3410:4353   */\n    tag_6:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3513:3519   */\n      dup1\n        /* \"#utility.yul\":3521:3527   */\n      0x00\n        /* \"#utility.yul\":3529:3535   */\n      dup1\n        /* \"#utility.yul\":3578:3581   */\n      0x80\n        /* \"#utility.yul\":3566:3575   */\n      dup6\n        /* \"#utility.yul\":3557:3564   */\n      dup8\n        /* \"#utility.yul\":3553:3576   */\n      sub\n        /* \"#utility.yul\":3549:3582   */\n      slt\n        /* \"#utility.yul\":3546:3666   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3585:3664   */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3546:3666   */\n    tag_78:\n        /* \"#utility.yul\":3705:3706   */\n      0x00\n        /* \"#utility.yul\":3730:3783   */\n      tag_80\n        /* \"#utility.yul\":3775:3782   */\n      dup8\n        /* \"#utility.yul\":3766:3772   */\n      dup3\n        /* \"#utility.yul\":3755:3764   */\n      dup9\n        /* \"#utility.yul\":3751:3773   */\n      add\n        /* \"#utility.yul\":3730:3783   */\n      tag_17\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3720:3783   */\n      swap5\n      pop\n        /* \"#utility.yul\":3676:3793   */\n      pop\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3858:3911   */\n      tag_81\n        /* \"#utility.yul\":3903:3910   */\n      dup8\n        /* \"#utility.yul\":3894:3900   */\n      dup3\n        /* \"#utility.yul\":3883:3892   */\n      dup9\n        /* \"#utility.yul\":3879:3901   */\n      add\n        /* \"#utility.yul\":3858:3911   */\n      tag_17\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3848:3911   */\n      swap4\n      pop\n        /* \"#utility.yul\":3803:3921   */\n      pop\n        /* \"#utility.yul\":3960:3962   */\n      0x40\n        /* \"#utility.yul\":3986:4039   */\n      tag_82\n        /* \"#utility.yul\":4031:4038   */\n      dup8\n        /* \"#utility.yul\":4022:4028   */\n      dup3\n        /* \"#utility.yul\":4011:4020   */\n      dup9\n        /* \"#utility.yul\":4007:4029   */\n      add\n        /* \"#utility.yul\":3986:4039   */\n      tag_20\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3976:4039   */\n      swap3\n      pop\n        /* \"#utility.yul\":3931:4049   */\n      pop\n        /* \"#utility.yul\":4116:4118   */\n      0x60\n        /* \"#utility.yul\":4105:4114   */\n      dup6\n        /* \"#utility.yul\":4101:4119   */\n      add\n        /* \"#utility.yul\":4088:4120   */\n      calldataload\n        /* \"#utility.yul\":4147:4165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4139:4145   */\n      dup2\n        /* \"#utility.yul\":4136:4166   */\n      gt\n        /* \"#utility.yul\":4133:4250   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":4169:4248   */\n      tag_84\n      tag_13\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4133:4250   */\n    tag_83:\n        /* \"#utility.yul\":4274:4336   */\n      tag_85\n        /* \"#utility.yul\":4328:4335   */\n      dup8\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4308:4317   */\n      dup9\n        /* \"#utility.yul\":4304:4326   */\n      add\n        /* \"#utility.yul\":4274:4336   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4264:4336   */\n      swap2\n      pop\n        /* \"#utility.yul\":4059:4346   */\n      pop\n        /* \"#utility.yul\":3410:4353   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4508   */\n    tag_31:\n        /* \"#utility.yul\":4395:4402   */\n      0x00\n        /* \"#utility.yul\":4435:4501   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4428:4433   */\n      dup3\n        /* \"#utility.yul\":4424:4502   */\n      and\n        /* \"#utility.yul\":4413:4502   */\n      swap1\n      pop\n        /* \"#utility.yul\":4359:4508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4629   */\n    tag_32:\n        /* \"#utility.yul\":4599:4622   */\n      tag_88\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4599:4622   */\n      tag_31\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4594:4597   */\n      dup3\n        /* \"#utility.yul\":4587:4623   */\n      mstore\n        /* \"#utility.yul\":4514:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4853   */\n    tag_9:\n        /* \"#utility.yul\":4726:4730   */\n      0x00\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4753:4762   */\n      dup3\n        /* \"#utility.yul\":4749:4767   */\n      add\n        /* \"#utility.yul\":4741:4767   */\n      swap1\n      pop\n        /* \"#utility.yul\":4777:4846   */\n      tag_90\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4832:4841   */\n      dup4\n        /* \"#utility.yul\":4828:4845   */\n      add\n        /* \"#utility.yul\":4819:4825   */\n      dup5\n        /* \"#utility.yul\":4777:4846   */\n      tag_32\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4635:4853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220005e97c05f449d4d7fb287fb9c7957bf20e14a2d42a45a6226b4adf936aa0c6864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea2646970667358221220005e97c05f449d4d7fb287fb9c7957bf20e14a2d42a45a6226b4adf936aa0c6864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5E SWAP8 0xC0 0x5F PREVRANDAO SWAP14 0x4D PUSH32 0xB287FB9C7957BF20E14A2D42A45A6226B4ADF936AA0C6864736F6C6343000813 STOP CALLER ",
							"sourceMap": "414:353:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_169": {
									"entryPoint": 96,
									"id": 169,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4856:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:8",
														"type": ""
													}
												],
												"src": "841:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:8"
															},
															"nodeType": "YulIf",
															"src": "977:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:8",
														"type": ""
													}
												],
												"src": "924:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:8",
														"type": ""
													}
												],
												"src": "1052:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:8",
														"type": ""
													}
												],
												"src": "1443:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:8"
															},
															"nodeType": "YulIf",
															"src": "1893:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:8",
														"type": ""
													}
												],
												"src": "1737:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:8",
														"type": ""
													}
												],
												"src": "2024:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:8"
															},
															"nodeType": "YulIf",
															"src": "2296:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:8",
														"type": ""
													}
												],
												"src": "2159:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2559:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2564:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:8",
														"type": ""
													}
												],
												"src": "2472:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:340:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2742:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2830:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2834:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2897:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2876:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2890:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:8"
															},
															"nodeType": "YulIf",
															"src": "2866:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2987:36:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2680:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2693:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2701:5:8",
														"type": ""
													}
												],
												"src": "2624:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3170:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:35:8"
															},
															"nodeType": "YulIf",
															"src": "3137:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3268:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3282:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3272:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3311:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3320:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3113:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3121:5:8",
														"type": ""
													}
												],
												"src": "3066:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3536:817:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3583:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3585:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3585:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3585:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3557:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:33:8"
															},
															"nodeType": "YulIf",
															"src": "3546:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3676:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3691:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3705:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3695:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3720:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3730:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3720:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3803:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3848:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3883:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3894:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3879:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3879:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3903:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3858:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3931:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3946:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3950:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3976:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4011:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4022:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4007:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4007:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4031:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3986:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3976:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4059:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4074:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4105:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4116:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4101:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4088:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4078:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4167:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4169:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4169:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4169:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4139:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4147:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "4133:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4264:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4308:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4319:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4304:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4304:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4328:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4274:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4264:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3513:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3521:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3529:6:8",
														"type": ""
													}
												],
												"src": "3410:943:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4428:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4413:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4395:7:8",
														"type": ""
													}
												],
												"src": "4359:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4594:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4599:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:36:8"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4565:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4572:3:8",
														"type": ""
													}
												],
												"src": "4514:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4731:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4741:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4819:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4777:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4703:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4715:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4726:4:8",
														"type": ""
													}
												],
												"src": "4635:218:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea2646970667358221220005e97c05f449d4d7fb287fb9c7957bf20e14a2d42a45a6226b4adf936aa0c6864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x5E SWAP8 0xC0 0x5F PREVRANDAO SWAP14 0x4D PUSH32 0xB287FB9C7957BF20E14A2D42A45A6226B4ADF936AA0C6864736F6C6343000813 STOP CALLER ",
							"sourceMap": "414:353:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;703:6;728:30;;;721:37;;603:162;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:146::-;2569:6;2564:3;2559;2546:30;2610:1;2601:6;2596:3;2592:16;2585:27;2472:146;;;:::o;2624:423::-;2701:5;2726:65;2742:48;2783:6;2742:48;:::i;:::-;2726:65;:::i;:::-;2717:74;;2814:6;2807:5;2800:21;2852:4;2845:5;2841:16;2890:3;2881:6;2876:3;2872:16;2869:25;2866:112;;;2897:79;;:::i;:::-;2866:112;2987:54;3034:6;3029:3;3024;2987:54;:::i;:::-;2707:340;2624:423;;;;;:::o;3066:338::-;3121:5;3170:3;3163:4;3155:6;3151:17;3147:27;3137:122;;3178:79;;:::i;:::-;3137:122;3295:6;3282:20;3320:78;3394:3;3386:6;3379:4;3371:6;3367:17;3320:78;:::i;:::-;3311:87;;3127:277;3066:338;;;;:::o;3410:943::-;3505:6;3513;3521;3529;3578:3;3566:9;3557:7;3553:23;3549:33;3546:120;;;3585:79;;:::i;:::-;3546:120;3705:1;3730:53;3775:7;3766:6;3755:9;3751:22;3730:53;:::i;:::-;3720:63;;3676:117;3832:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3803:118;3960:2;3986:53;4031:7;4022:6;4011:9;4007:22;3986:53;:::i;:::-;3976:63;;3931:118;4116:2;4105:9;4101:18;4088:32;4147:18;4139:6;4136:30;4133:117;;;4169:79;;:::i;:::-;4133:117;4274:62;4328:7;4319:6;4308:9;4304:22;4274:62;:::i;:::-;4264:72;;4059:287;3410:943;;;;;;;:::o;4359:149::-;4395:7;4435:66;4428:5;4424:78;4413:89;;4359:149;;;:::o;4514:115::-;4599:23;4616:5;4599:23;:::i;:::-;4594:3;4587:36;4514:115;;:::o;4635:218::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4777:69;4843:1;4832:9;4828:17;4819:6;4777:69;:::i;:::-;4635:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220005e97c05f449d4d7fb287fb9c7957bf20e14a2d42a45a6226b4adf936aa0c6864736f6c63430008130033",
									".code": [
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 767,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 721,
											"end": 758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2562,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2576,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2742,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2897,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2987,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 3047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3147,
											"end": 3174,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3178,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3320,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3066,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3585,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3730,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3676,
											"end": 3793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3858,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4088,
											"end": 4120,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4165,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4169,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4328,
											"end": 4335,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4317,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4304,
											"end": 4326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4274,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4424,
											"end": 4502,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4599,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 4597,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4777,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"dynamic_nft/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x67ef46fef257faae47adb630aad49694dda0334e5f7a7c5fb386243b974886b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c63284cf05ff845109190961e72ca27bd6a7b997f053d2ce21db83e9e285085c\",\"dweb:/ipfs/QmQBQVYJRzscToP6YaTRDvwYeLmr4V7kD1PjoG9mRpUYzU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"dynamic_nft/MinimalReceiver.sol": {
				"MinimalReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"dynamic_nft/MinimalReceiver.sol\":214:375  contract MinimalReceiver is ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"dynamic_nft/MinimalReceiver.sol\":214:375  contract MinimalReceiver is ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_36\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_37\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_38\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":703:709  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":728:758  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":721:758  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_43:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_44:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_45:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_46:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_47:\n        /* \"#utility.yul\":561:584   */\n      tag_79\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_46\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_80:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_48:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_82\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_47\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_12:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_85\n      tag_44\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":833:952   */\n    tag_84:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_86\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_49:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_50:\n        /* \"#utility.yul\":1268:1289   */\n      tag_89\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_49\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_15:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_91\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_50\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_51:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_52:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_94\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_51\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_53:\n        /* \"#utility.yul\":1825:1849   */\n      tag_96\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_52\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_97:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_54:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_99\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_53\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_55:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_56:\n        /* \"#utility.yul\":2181:2205   */\n      tag_102\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_103:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_57:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_105\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_56\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2498   */\n    tag_58:\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      dup1\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2504:2621   */\n    tag_59:\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2610:2611   */\n      dup1\n        /* \"#utility.yul\":2603:2615   */\n      revert\n        /* \"#utility.yul\":2627:2729   */\n    tag_60:\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2719:2721   */\n      0x1f\n        /* \"#utility.yul\":2715:2722   */\n      not\n        /* \"#utility.yul\":2710:2712   */\n      0x1f\n        /* \"#utility.yul\":2703:2708   */\n      dup4\n        /* \"#utility.yul\":2699:2713   */\n      add\n        /* \"#utility.yul\":2695:2723   */\n      and\n        /* \"#utility.yul\":2685:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2627:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2915   */\n    tag_61:\n        /* \"#utility.yul\":2783:2860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x41\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n        /* \"#utility.yul\":2921:3202   */\n    tag_62:\n        /* \"#utility.yul\":3004:3031   */\n      tag_111\n        /* \"#utility.yul\":3026:3030   */\n      dup3\n        /* \"#utility.yul\":3004:3031   */\n      tag_60\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2996:3002   */\n      dup2\n        /* \"#utility.yul\":2992:3032   */\n      add\n        /* \"#utility.yul\":3134:3140   */\n      dup2\n        /* \"#utility.yul\":3122:3132   */\n      dup2\n        /* \"#utility.yul\":3119:3141   */\n      lt\n        /* \"#utility.yul\":3098:3116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3086:3096   */\n      dup3\n        /* \"#utility.yul\":3083:3117   */\n      gt\n        /* \"#utility.yul\":3080:3142   */\n      or\n        /* \"#utility.yul\":3077:3165   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3145:3163   */\n      tag_113\n      tag_61\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3077:3165   */\n    tag_112:\n        /* \"#utility.yul\":3185:3195   */\n      dup1\n        /* \"#utility.yul\":3181:3183   */\n      0x40\n        /* \"#utility.yul\":3174:3196   */\n      mstore\n        /* \"#utility.yul\":2964:3202   */\n      pop\n        /* \"#utility.yul\":2921:3202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3337   */\n    tag_63:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3269:3289   */\n      tag_115\n      tag_43\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3259:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3331   */\n      tag_116\n        /* \"#utility.yul\":3326:3330   */\n      dup3\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3298:3331   */\n      tag_62\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3208:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3650   */\n    tag_64:\n        /* \"#utility.yul\":3404:3408   */\n      0x00\n        /* \"#utility.yul\":3494:3512   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3486:3492   */\n      dup3\n        /* \"#utility.yul\":3483:3513   */\n      gt\n        /* \"#utility.yul\":3480:3536   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3516:3534   */\n      tag_119\n      tag_61\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3480:3536   */\n    tag_118:\n        /* \"#utility.yul\":3554:3583   */\n      tag_120\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3554:3583   */\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3546:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3638:3642   */\n      0x20\n        /* \"#utility.yul\":3632:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3643   */\n      add\n        /* \"#utility.yul\":3620:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3802   */\n    tag_65:\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3748:3751   */\n      dup2\n        /* \"#utility.yul\":3743:3746   */\n      dup4\n        /* \"#utility.yul\":3730:3760   */\n      calldatacopy\n        /* \"#utility.yul\":3794:3795   */\n      0x00\n        /* \"#utility.yul\":3785:3791   */\n      dup4\n        /* \"#utility.yul\":3780:3783   */\n      dup4\n        /* \"#utility.yul\":3776:3792   */\n      add\n        /* \"#utility.yul\":3769:3796   */\n      mstore\n        /* \"#utility.yul\":3656:3802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4231   */\n    tag_66:\n        /* \"#utility.yul\":3885:3890   */\n      0x00\n        /* \"#utility.yul\":3910:3975   */\n      tag_123\n        /* \"#utility.yul\":3926:3974   */\n      tag_124\n        /* \"#utility.yul\":3967:3973   */\n      dup5\n        /* \"#utility.yul\":3926:3974   */\n      tag_64\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3910:3975   */\n      tag_63\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3901:3975   */\n      swap1\n      pop\n        /* \"#utility.yul\":3998:4004   */\n      dup3\n        /* \"#utility.yul\":3991:3996   */\n      dup2\n        /* \"#utility.yul\":3984:4005   */\n      mstore\n        /* \"#utility.yul\":4036:4040   */\n      0x20\n        /* \"#utility.yul\":4029:4034   */\n      dup2\n        /* \"#utility.yul\":4025:4041   */\n      add\n        /* \"#utility.yul\":4074:4077   */\n      dup5\n        /* \"#utility.yul\":4065:4071   */\n      dup5\n        /* \"#utility.yul\":4060:4063   */\n      dup5\n        /* \"#utility.yul\":4056:4072   */\n      add\n        /* \"#utility.yul\":4053:4078   */\n      gt\n        /* \"#utility.yul\":4050:4162   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4081:4160   */\n      tag_126\n      tag_59\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4050:4162   */\n    tag_125:\n        /* \"#utility.yul\":4171:4225   */\n      tag_127\n        /* \"#utility.yul\":4218:4224   */\n      dup5\n        /* \"#utility.yul\":4213:4216   */\n      dup3\n        /* \"#utility.yul\":4208:4211   */\n      dup6\n        /* \"#utility.yul\":4171:4225   */\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3891:4231   */\n      pop\n        /* \"#utility.yul\":3808:4231   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4588   */\n    tag_67:\n        /* \"#utility.yul\":4305:4310   */\n      0x00\n        /* \"#utility.yul\":4354:4357   */\n      dup3\n        /* \"#utility.yul\":4347:4351   */\n      0x1f\n        /* \"#utility.yul\":4339:4345   */\n      dup4\n        /* \"#utility.yul\":4335:4352   */\n      add\n        /* \"#utility.yul\":4331:4358   */\n      slt\n        /* \"#utility.yul\":4321:4443   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":4362:4441   */\n      tag_130\n      tag_58\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4321:4443   */\n    tag_129:\n        /* \"#utility.yul\":4479:4485   */\n      dup2\n        /* \"#utility.yul\":4466:4486   */\n      calldataload\n        /* \"#utility.yul\":4504:4582   */\n      tag_131\n        /* \"#utility.yul\":4578:4581   */\n      dup5\n        /* \"#utility.yul\":4570:4576   */\n      dup3\n        /* \"#utility.yul\":4563:4567   */\n      0x20\n        /* \"#utility.yul\":4555:4561   */\n      dup7\n        /* \"#utility.yul\":4551:4568   */\n      add\n        /* \"#utility.yul\":4504:4582   */\n      tag_66\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4495:4582   */\n      swap2\n      pop\n        /* \"#utility.yul\":4311:4588   */\n      pop\n        /* \"#utility.yul\":4250:4588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4594:5537   */\n    tag_19:\n        /* \"#utility.yul\":4689:4695   */\n      0x00\n        /* \"#utility.yul\":4697:4703   */\n      dup1\n        /* \"#utility.yul\":4705:4711   */\n      0x00\n        /* \"#utility.yul\":4713:4719   */\n      dup1\n        /* \"#utility.yul\":4762:4765   */\n      0x80\n        /* \"#utility.yul\":4750:4759   */\n      dup6\n        /* \"#utility.yul\":4741:4748   */\n      dup8\n        /* \"#utility.yul\":4737:4760   */\n      sub\n        /* \"#utility.yul\":4733:4766   */\n      slt\n        /* \"#utility.yul\":4730:4850   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4769:4848   */\n      tag_134\n      tag_44\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4730:4850   */\n    tag_133:\n        /* \"#utility.yul\":4889:4890   */\n      0x00\n        /* \"#utility.yul\":4914:4967   */\n      tag_135\n        /* \"#utility.yul\":4959:4966   */\n      dup8\n        /* \"#utility.yul\":4950:4956   */\n      dup3\n        /* \"#utility.yul\":4939:4948   */\n      dup9\n        /* \"#utility.yul\":4935:4957   */\n      add\n        /* \"#utility.yul\":4914:4967   */\n      tag_54\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4904:4967   */\n      swap5\n      pop\n        /* \"#utility.yul\":4860:4977   */\n      pop\n        /* \"#utility.yul\":5016:5018   */\n      0x20\n        /* \"#utility.yul\":5042:5095   */\n      tag_136\n        /* \"#utility.yul\":5087:5094   */\n      dup8\n        /* \"#utility.yul\":5078:5084   */\n      dup3\n        /* \"#utility.yul\":5067:5076   */\n      dup9\n        /* \"#utility.yul\":5063:5085   */\n      add\n        /* \"#utility.yul\":5042:5095   */\n      tag_54\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5032:5095   */\n      swap4\n      pop\n        /* \"#utility.yul\":4987:5105   */\n      pop\n        /* \"#utility.yul\":5144:5146   */\n      0x40\n        /* \"#utility.yul\":5170:5223   */\n      tag_137\n        /* \"#utility.yul\":5215:5222   */\n      dup8\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5195:5204   */\n      dup9\n        /* \"#utility.yul\":5191:5213   */\n      add\n        /* \"#utility.yul\":5170:5223   */\n      tag_57\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5160:5223   */\n      swap3\n      pop\n        /* \"#utility.yul\":5115:5233   */\n      pop\n        /* \"#utility.yul\":5300:5302   */\n      0x60\n        /* \"#utility.yul\":5289:5298   */\n      dup6\n        /* \"#utility.yul\":5285:5303   */\n      add\n        /* \"#utility.yul\":5272:5304   */\n      calldataload\n        /* \"#utility.yul\":5331:5349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5323:5329   */\n      dup2\n        /* \"#utility.yul\":5320:5350   */\n      gt\n        /* \"#utility.yul\":5317:5434   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":5353:5432   */\n      tag_139\n      tag_45\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5317:5434   */\n    tag_138:\n        /* \"#utility.yul\":5458:5520   */\n      tag_140\n        /* \"#utility.yul\":5512:5519   */\n      dup8\n        /* \"#utility.yul\":5503:5509   */\n      dup3\n        /* \"#utility.yul\":5492:5501   */\n      dup9\n        /* \"#utility.yul\":5488:5510   */\n      add\n        /* \"#utility.yul\":5458:5520   */\n      tag_67\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5448:5520   */\n      swap2\n      pop\n        /* \"#utility.yul\":5243:5530   */\n      pop\n        /* \"#utility.yul\":4594:5537   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5543:5658   */\n    tag_68:\n        /* \"#utility.yul\":5628:5651   */\n      tag_142\n        /* \"#utility.yul\":5645:5650   */\n      dup2\n        /* \"#utility.yul\":5628:5651   */\n      tag_46\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5623:5626   */\n      dup3\n        /* \"#utility.yul\":5616:5652   */\n      mstore\n        /* \"#utility.yul\":5543:5658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5664:5882   */\n    tag_22:\n        /* \"#utility.yul\":5755:5759   */\n      0x00\n        /* \"#utility.yul\":5793:5795   */\n      0x20\n        /* \"#utility.yul\":5782:5791   */\n      dup3\n        /* \"#utility.yul\":5778:5796   */\n      add\n        /* \"#utility.yul\":5770:5796   */\n      swap1\n      pop\n        /* \"#utility.yul\":5806:5875   */\n      tag_144\n        /* \"#utility.yul\":5872:5873   */\n      0x00\n        /* \"#utility.yul\":5861:5870   */\n      dup4\n        /* \"#utility.yul\":5857:5874   */\n      add\n        /* \"#utility.yul\":5848:5854   */\n      dup5\n        /* \"#utility.yul\":5806:5875   */\n      tag_68\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5664:5882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6199   */\n    tag_69:\n        /* \"#utility.yul\":5965:5969   */\n      0x00\n        /* \"#utility.yul\":6055:6073   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6047:6053   */\n      dup3\n        /* \"#utility.yul\":6044:6074   */\n      gt\n        /* \"#utility.yul\":6041:6097   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":6077:6095   */\n      tag_147\n      tag_61\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6041:6097   */\n    tag_146:\n        /* \"#utility.yul\":6127:6131   */\n      0x20\n        /* \"#utility.yul\":6119:6125   */\n      dup3\n        /* \"#utility.yul\":6115:6132   */\n      mul\n        /* \"#utility.yul\":6107:6132   */\n      swap1\n      pop\n        /* \"#utility.yul\":6187:6191   */\n      0x20\n        /* \"#utility.yul\":6181:6185   */\n      dup2\n        /* \"#utility.yul\":6177:6192   */\n      add\n        /* \"#utility.yul\":6169:6192   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6205:6322   */\n    tag_70:\n        /* \"#utility.yul\":6314:6315   */\n      0x00\n        /* \"#utility.yul\":6311:6312   */\n      dup1\n        /* \"#utility.yul\":6304:6316   */\n      revert\n        /* \"#utility.yul\":6345:7055   */\n    tag_71:\n        /* \"#utility.yul\":6441:6446   */\n      0x00\n        /* \"#utility.yul\":6466:6547   */\n      tag_150\n        /* \"#utility.yul\":6482:6546   */\n      tag_151\n        /* \"#utility.yul\":6539:6545   */\n      dup5\n        /* \"#utility.yul\":6482:6546   */\n      tag_69\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6466:6547   */\n      tag_63\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6457:6547   */\n      swap1\n      pop\n        /* \"#utility.yul\":6567:6572   */\n      dup1\n        /* \"#utility.yul\":6596:6602   */\n      dup4\n        /* \"#utility.yul\":6589:6594   */\n      dup3\n        /* \"#utility.yul\":6582:6603   */\n      mstore\n        /* \"#utility.yul\":6630:6634   */\n      0x20\n        /* \"#utility.yul\":6623:6628   */\n      dup3\n        /* \"#utility.yul\":6619:6635   */\n      add\n        /* \"#utility.yul\":6612:6635   */\n      swap1\n      pop\n        /* \"#utility.yul\":6683:6687   */\n      0x20\n        /* \"#utility.yul\":6675:6681   */\n      dup5\n        /* \"#utility.yul\":6671:6688   */\n      mul\n        /* \"#utility.yul\":6663:6669   */\n      dup4\n        /* \"#utility.yul\":6659:6689   */\n      add\n        /* \"#utility.yul\":6712:6715   */\n      dup6\n        /* \"#utility.yul\":6704:6710   */\n      dup2\n        /* \"#utility.yul\":6701:6716   */\n      gt\n        /* \"#utility.yul\":6698:6820   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":6731:6810   */\n      tag_153\n      tag_70\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6698:6820   */\n    tag_152:\n        /* \"#utility.yul\":6846:6852   */\n      dup4\n        /* \"#utility.yul\":6829:7049   */\n    tag_154:\n        /* \"#utility.yul\":6863:6869   */\n      dup2\n        /* \"#utility.yul\":6858:6861   */\n      dup2\n        /* \"#utility.yul\":6855:6870   */\n      lt\n        /* \"#utility.yul\":6829:7049   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":6938:6941   */\n      dup1\n        /* \"#utility.yul\":6967:7004   */\n      tag_157\n        /* \"#utility.yul\":7000:7003   */\n      dup9\n        /* \"#utility.yul\":6988:6998   */\n      dup3\n        /* \"#utility.yul\":6967:7004   */\n      tag_57\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6962:6965   */\n      dup5\n        /* \"#utility.yul\":6955:7005   */\n      mstore\n        /* \"#utility.yul\":7034:7038   */\n      0x20\n        /* \"#utility.yul\":7029:7032   */\n      dup5\n        /* \"#utility.yul\":7025:7039   */\n      add\n        /* \"#utility.yul\":7018:7039   */\n      swap4\n      pop\n        /* \"#utility.yul\":6905:7049   */\n      pop\n        /* \"#utility.yul\":6889:6893   */\n      0x20\n        /* \"#utility.yul\":6884:6887   */\n      dup2\n        /* \"#utility.yul\":6880:6894   */\n      add\n        /* \"#utility.yul\":6873:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6829:7049   */\n      jump(tag_154)\n    tag_156:\n        /* \"#utility.yul\":6833:6854   */\n      pop\n        /* \"#utility.yul\":6447:7055   */\n      pop\n      pop\n        /* \"#utility.yul\":6345:7055   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7448   */\n    tag_72:\n        /* \"#utility.yul\":7149:7154   */\n      0x00\n        /* \"#utility.yul\":7198:7201   */\n      dup3\n        /* \"#utility.yul\":7191:7195   */\n      0x1f\n        /* \"#utility.yul\":7183:7189   */\n      dup4\n        /* \"#utility.yul\":7179:7196   */\n      add\n        /* \"#utility.yul\":7175:7202   */\n      slt\n        /* \"#utility.yul\":7165:7287   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7206:7285   */\n      tag_160\n      tag_58\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7165:7287   */\n    tag_159:\n        /* \"#utility.yul\":7323:7329   */\n      dup2\n        /* \"#utility.yul\":7310:7330   */\n      calldataload\n        /* \"#utility.yul\":7348:7442   */\n      tag_161\n        /* \"#utility.yul\":7438:7441   */\n      dup5\n        /* \"#utility.yul\":7430:7436   */\n      dup3\n        /* \"#utility.yul\":7423:7427   */\n      0x20\n        /* \"#utility.yul\":7415:7421   */\n      dup7\n        /* \"#utility.yul\":7411:7428   */\n      add\n        /* \"#utility.yul\":7348:7442   */\n      tag_71\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7339:7442   */\n      swap2\n      pop\n        /* \"#utility.yul\":7155:7448   */\n      pop\n        /* \"#utility.yul\":7078:7448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7454:8963   */\n    tag_26:\n        /* \"#utility.yul\":7608:7614   */\n      0x00\n        /* \"#utility.yul\":7616:7622   */\n      dup1\n        /* \"#utility.yul\":7624:7630   */\n      0x00\n        /* \"#utility.yul\":7632:7638   */\n      dup1\n        /* \"#utility.yul\":7640:7646   */\n      0x00\n        /* \"#utility.yul\":7689:7692   */\n      0xa0\n        /* \"#utility.yul\":7677:7686   */\n      dup7\n        /* \"#utility.yul\":7668:7675   */\n      dup9\n        /* \"#utility.yul\":7664:7687   */\n      sub\n        /* \"#utility.yul\":7660:7693   */\n      slt\n        /* \"#utility.yul\":7657:7777   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":7696:7775   */\n      tag_164\n      tag_44\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7657:7777   */\n    tag_163:\n        /* \"#utility.yul\":7816:7817   */\n      0x00\n        /* \"#utility.yul\":7841:7894   */\n      tag_165\n        /* \"#utility.yul\":7886:7893   */\n      dup9\n        /* \"#utility.yul\":7877:7883   */\n      dup3\n        /* \"#utility.yul\":7866:7875   */\n      dup10\n        /* \"#utility.yul\":7862:7884   */\n      add\n        /* \"#utility.yul\":7841:7894   */\n      tag_54\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7831:7894   */\n      swap6\n      pop\n        /* \"#utility.yul\":7787:7904   */\n      pop\n        /* \"#utility.yul\":7943:7945   */\n      0x20\n        /* \"#utility.yul\":7969:8022   */\n      tag_166\n        /* \"#utility.yul\":8014:8021   */\n      dup9\n        /* \"#utility.yul\":8005:8011   */\n      dup3\n        /* \"#utility.yul\":7994:8003   */\n      dup10\n        /* \"#utility.yul\":7990:8012   */\n      add\n        /* \"#utility.yul\":7969:8022   */\n      tag_54\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7959:8022   */\n      swap5\n      pop\n        /* \"#utility.yul\":7914:8032   */\n      pop\n        /* \"#utility.yul\":8099:8101   */\n      0x40\n        /* \"#utility.yul\":8088:8097   */\n      dup7\n        /* \"#utility.yul\":8084:8102   */\n      add\n        /* \"#utility.yul\":8071:8103   */\n      calldataload\n        /* \"#utility.yul\":8130:8148   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8122:8128   */\n      dup2\n        /* \"#utility.yul\":8119:8149   */\n      gt\n        /* \"#utility.yul\":8116:8233   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":8152:8231   */\n      tag_168\n      tag_45\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8116:8233   */\n    tag_167:\n        /* \"#utility.yul\":8257:8335   */\n      tag_169\n        /* \"#utility.yul\":8327:8334   */\n      dup9\n        /* \"#utility.yul\":8318:8324   */\n      dup3\n        /* \"#utility.yul\":8307:8316   */\n      dup10\n        /* \"#utility.yul\":8303:8325   */\n      add\n        /* \"#utility.yul\":8257:8335   */\n      tag_72\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":8247:8335   */\n      swap4\n      pop\n        /* \"#utility.yul\":8042:8345   */\n      pop\n        /* \"#utility.yul\":8412:8414   */\n      0x60\n        /* \"#utility.yul\":8401:8410   */\n      dup7\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8384:8416   */\n      calldataload\n        /* \"#utility.yul\":8443:8461   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8435:8441   */\n      dup2\n        /* \"#utility.yul\":8432:8462   */\n      gt\n        /* \"#utility.yul\":8429:8546   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":8465:8544   */\n      tag_171\n      tag_45\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":8429:8546   */\n    tag_170:\n        /* \"#utility.yul\":8570:8648   */\n      tag_172\n        /* \"#utility.yul\":8640:8647   */\n      dup9\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8620:8629   */\n      dup10\n        /* \"#utility.yul\":8616:8638   */\n      add\n        /* \"#utility.yul\":8570:8648   */\n      tag_72\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8560:8648   */\n      swap3\n      pop\n        /* \"#utility.yul\":8355:8658   */\n      pop\n        /* \"#utility.yul\":8725:8728   */\n      0x80\n        /* \"#utility.yul\":8714:8723   */\n      dup7\n        /* \"#utility.yul\":8710:8729   */\n      add\n        /* \"#utility.yul\":8697:8730   */\n      calldataload\n        /* \"#utility.yul\":8757:8775   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8749:8755   */\n      dup2\n        /* \"#utility.yul\":8746:8776   */\n      gt\n        /* \"#utility.yul\":8743:8860   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":8779:8858   */\n      tag_174\n      tag_45\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":8743:8860   */\n    tag_173:\n        /* \"#utility.yul\":8884:8946   */\n      tag_175\n        /* \"#utility.yul\":8938:8945   */\n      dup9\n        /* \"#utility.yul\":8929:8935   */\n      dup3\n        /* \"#utility.yul\":8918:8927   */\n      dup10\n        /* \"#utility.yul\":8914:8936   */\n      add\n        /* \"#utility.yul\":8884:8946   */\n      tag_67\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8874:8946   */\n      swap2\n      pop\n        /* \"#utility.yul\":8668:8956   */\n      pop\n        /* \"#utility.yul\":7454:8963   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8969:10058   */\n    tag_32:\n        /* \"#utility.yul\":9073:9079   */\n      0x00\n        /* \"#utility.yul\":9081:9087   */\n      dup1\n        /* \"#utility.yul\":9089:9095   */\n      0x00\n        /* \"#utility.yul\":9097:9103   */\n      dup1\n        /* \"#utility.yul\":9105:9111   */\n      0x00\n        /* \"#utility.yul\":9154:9157   */\n      0xa0\n        /* \"#utility.yul\":9142:9151   */\n      dup7\n        /* \"#utility.yul\":9133:9140   */\n      dup9\n        /* \"#utility.yul\":9129:9152   */\n      sub\n        /* \"#utility.yul\":9125:9158   */\n      slt\n        /* \"#utility.yul\":9122:9242   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":9161:9240   */\n      tag_178\n      tag_44\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":9122:9242   */\n    tag_177:\n        /* \"#utility.yul\":9281:9282   */\n      0x00\n        /* \"#utility.yul\":9306:9359   */\n      tag_179\n        /* \"#utility.yul\":9351:9358   */\n      dup9\n        /* \"#utility.yul\":9342:9348   */\n      dup3\n        /* \"#utility.yul\":9331:9340   */\n      dup10\n        /* \"#utility.yul\":9327:9349   */\n      add\n        /* \"#utility.yul\":9306:9359   */\n      tag_54\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":9296:9359   */\n      swap6\n      pop\n        /* \"#utility.yul\":9252:9369   */\n      pop\n        /* \"#utility.yul\":9408:9410   */\n      0x20\n        /* \"#utility.yul\":9434:9487   */\n      tag_180\n        /* \"#utility.yul\":9479:9486   */\n      dup9\n        /* \"#utility.yul\":9470:9476   */\n      dup3\n        /* \"#utility.yul\":9459:9468   */\n      dup10\n        /* \"#utility.yul\":9455:9477   */\n      add\n        /* \"#utility.yul\":9434:9487   */\n      tag_54\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":9424:9487   */\n      swap5\n      pop\n        /* \"#utility.yul\":9379:9497   */\n      pop\n        /* \"#utility.yul\":9536:9538   */\n      0x40\n        /* \"#utility.yul\":9562:9615   */\n      tag_181\n        /* \"#utility.yul\":9607:9614   */\n      dup9\n        /* \"#utility.yul\":9598:9604   */\n      dup3\n        /* \"#utility.yul\":9587:9596   */\n      dup10\n        /* \"#utility.yul\":9583:9605   */\n      add\n        /* \"#utility.yul\":9562:9615   */\n      tag_57\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":9552:9615   */\n      swap4\n      pop\n        /* \"#utility.yul\":9507:9625   */\n      pop\n        /* \"#utility.yul\":9664:9666   */\n      0x60\n        /* \"#utility.yul\":9690:9743   */\n      tag_182\n        /* \"#utility.yul\":9735:9742   */\n      dup9\n        /* \"#utility.yul\":9726:9732   */\n      dup3\n        /* \"#utility.yul\":9715:9724   */\n      dup10\n        /* \"#utility.yul\":9711:9733   */\n      add\n        /* \"#utility.yul\":9690:9743   */\n      tag_57\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":9680:9743   */\n      swap3\n      pop\n        /* \"#utility.yul\":9635:9753   */\n      pop\n        /* \"#utility.yul\":9820:9823   */\n      0x80\n        /* \"#utility.yul\":9809:9818   */\n      dup7\n        /* \"#utility.yul\":9805:9824   */\n      add\n        /* \"#utility.yul\":9792:9825   */\n      calldataload\n        /* \"#utility.yul\":9852:9870   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9844:9850   */\n      dup2\n        /* \"#utility.yul\":9841:9871   */\n      gt\n        /* \"#utility.yul\":9838:9955   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":9874:9953   */\n      tag_184\n      tag_45\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":9838:9955   */\n    tag_183:\n        /* \"#utility.yul\":9979:10041   */\n      tag_185\n        /* \"#utility.yul\":10033:10040   */\n      dup9\n        /* \"#utility.yul\":10024:10030   */\n      dup3\n        /* \"#utility.yul\":10013:10022   */\n      dup10\n        /* \"#utility.yul\":10009:10031   */\n      add\n        /* \"#utility.yul\":9979:10041   */\n      tag_67\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":9969:10041   */\n      swap2\n      pop\n        /* \"#utility.yul\":9763:10051   */\n      pop\n        /* \"#utility.yul\":8969:10058   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201cc5a21a2841e21d0de6779b35fe180d0926b0139e6ac146aa8e811f1aeec9ec64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061081f806100206000396000f3fe6080604052600436106100435760003560e01c806301ffc9a71461004f578063150b7a021461008c578063bc197c81146100c9578063f23a6e61146101065761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906102d1565b610143565b6040516100839190610319565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae919061050e565b6101bd565b6040516100c091906105a0565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610683565b6101d1565b6040516100fd91906105a0565b60405180910390f35b34801561011257600080fd5b5061012d60048036038101906101289190610752565b6101e6565b60405161013a91906105a0565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101b657506101b5826101fb565b5b9050919050565b600063150b7a0260e01b9050949350505050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102ae81610279565b81146102b957600080fd5b50565b6000813590506102cb816102a5565b92915050565b6000602082840312156102e7576102e661026f565b5b60006102f5848285016102bc565b91505092915050565b60008115159050919050565b610313816102fe565b82525050565b600060208201905061032e600083018461030a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000819050919050565b6103a581610392565b81146103b057600080fd5b50565b6000813590506103c28161039c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041b826103d2565b810181811067ffffffffffffffff8211171561043a576104396103e3565b5b80604052505050565b600061044d610265565b90506104598282610412565b919050565b600067ffffffffffffffff821115610479576104786103e3565b5b610482826103d2565b9050602081019050919050565b82818337600083830152505050565b60006104b16104ac8461045e565b610443565b9050828152602081018484840111156104cd576104cc6103cd565b5b6104d884828561048f565b509392505050565b600082601f8301126104f5576104f46103c8565b5b813561050584826020860161049e565b91505092915050565b600080600080608085870312156105285761052761026f565b5b60006105368782880161037d565b94505060206105478782880161037d565b9350506040610558878288016103b3565b925050606085013567ffffffffffffffff81111561057957610578610274565b5b610585878288016104e0565b91505092959194509250565b61059a81610279565b82525050565b60006020820190506105b56000830184610591565b92915050565b600067ffffffffffffffff8211156105d6576105d56103e3565b5b602082029050602081019050919050565b600080fd5b60006105ff6105fa846105bb565b610443565b90508083825260208201905060208402830185811115610622576106216105e7565b5b835b8181101561064b578061063788826103b3565b845260208401935050602081019050610624565b5050509392505050565b600082601f83011261066a576106696103c8565b5b813561067a8482602086016105ec565b91505092915050565b600080600080600060a0868803121561069f5761069e61026f565b5b60006106ad8882890161037d565b95505060206106be8882890161037d565b945050604086013567ffffffffffffffff8111156106df576106de610274565b5b6106eb88828901610655565b935050606086013567ffffffffffffffff81111561070c5761070b610274565b5b61071888828901610655565b925050608086013567ffffffffffffffff81111561073957610738610274565b5b610745888289016104e0565b9150509295509295909350565b600080600080600060a0868803121561076e5761076d61026f565b5b600061077c8882890161037d565b955050602061078d8882890161037d565b945050604061079e888289016103b3565b93505060606107af888289016103b3565b925050608086013567ffffffffffffffff8111156107d0576107cf610274565b5b6107dc888289016104e0565b915050929550929590935056fea26469706673582212201cc5a21a2841e21d0de6779b35fe180d0926b0139e6ac146aa8e811f1aeec9ec64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x106 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1B6 JUMPI POP PUSH2 0x1B5 DUP3 PUSH2 0x1FB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x279 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CB DUP2 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41B DUP3 PUSH2 0x3D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3CD JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 PUSH2 0x48F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x505 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x547 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x558 DUP8 DUP3 DUP9 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x579 JUMPI PUSH2 0x578 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x585 DUP8 DUP3 DUP9 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF PUSH2 0x5FA DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x5E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 PUSH2 0x637 DUP9 DUP3 PUSH2 0x3B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x67A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6BE DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x718 DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x745 DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH2 0x76D PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x78D DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x79E DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7AF DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x7DC DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC5 LOG2 BYTE 0x28 COINBASE 0xE2 SAR 0xD 0xE6 PUSH24 0x9B35FE180D0926B0139E6AC146AA8E811F1AEEC9EC64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "214:161:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_90": {
									"entryPoint": 465,
									"id": 90,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_67": {
									"entryPoint": 486,
									"id": 67,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_169": {
									"entryPoint": 445,
									"id": 169,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@supportsInterface_124": {
									"entryPoint": 323,
									"id": 124,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_193": {
									"entryPoint": 507,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10061:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:8",
														"type": ""
													}
												],
												"src": "334:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:8"
															},
															"nodeType": "YulIf",
															"src": "541:62:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:8",
														"type": ""
													}
												],
												"src": "489:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:8",
														"type": ""
													}
												],
												"src": "615:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nodeType": "YulIf",
															"src": "833:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:8",
														"type": ""
													}
												],
												"src": "758:327:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:8",
														"type": ""
													}
												],
												"src": "1091:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:8",
														"type": ""
													}
												],
												"src": "1187:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:8",
														"type": ""
													}
												],
												"src": "1302:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:8",
														"type": ""
													}
												],
												"src": "1518:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:8",
														"type": ""
													}
												],
												"src": "1650:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:8"
															},
															"nodeType": "YulIf",
															"src": "1805:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:8",
														"type": ""
													}
												],
												"src": "1752:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:8",
														"type": ""
													}
												],
												"src": "1880:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2080:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2091:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2052:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2062:7:8",
														"type": ""
													}
												],
												"src": "2025:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:43:8"
															},
															"nodeType": "YulIf",
															"src": "2161:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:8",
														"type": ""
													}
												],
												"src": "2108:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2288:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2298:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2266:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2274:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2282:5:8",
														"type": ""
													}
												],
												"src": "2236:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2381:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2593:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2504:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2675:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2685:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2703:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2710:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2699:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2658:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2668:6:8",
														"type": ""
													}
												],
												"src": "2627:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2974:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3026:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3004:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2978:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3143:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3145:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3145:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3145:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3086:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3083:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3122:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3119:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3080:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:62:8"
															},
															"nodeType": "YulIf",
															"src": "3077:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3181:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3185:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2950:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2958:4:8",
														"type": ""
													}
												],
												"src": "2921:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3259:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3269:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3326:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3298:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3233:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3242:6:8",
														"type": ""
													}
												],
												"src": "3208:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3409:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3514:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3516:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3516:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3516:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3483:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:30:8"
															},
															"nodeType": "YulIf",
															"src": "3480:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3546:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3554:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3546:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3620:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3632:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3393:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3404:4:8",
														"type": ""
													}
												],
												"src": "3343:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3743:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3748:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3753:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3730:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3780:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3776:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3794:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3769:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3702:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3707:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3712:6:8",
														"type": ""
													}
												],
												"src": "3656:146:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:340:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3901:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3926:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3910:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3991:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3998:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4014:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4029:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4018:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4079:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4081:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4081:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4060:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4065:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4053:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:25:8"
															},
															"nodeType": "YulIf",
															"src": "4050:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4208:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4213:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4218:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4171:36:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4171:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3864:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3877:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3885:5:8",
														"type": ""
													}
												],
												"src": "3808:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:277:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4362:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4339:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4347:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4335:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4335:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4354:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:35:8"
															},
															"nodeType": "YulIf",
															"src": "4321:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4452:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4466:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4456:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4495:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4555:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4563:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4551:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4504:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4504:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4495:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4289:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4297:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4305:5:8",
														"type": ""
													}
												],
												"src": "4250:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4720:817:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4767:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4769:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4769:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4769:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4741:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4762:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:33:8"
															},
															"nodeType": "YulIf",
															"src": "4730:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4860:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4875:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4879:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4904:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4939:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4950:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4935:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4935:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4959:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4914:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4904:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4987:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5002:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5016:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5006:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5032:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5067:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5078:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5063:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5063:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5087:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5042:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5032:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5115:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5130:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5144:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5134:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5160:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5195:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5206:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5191:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5191:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5215:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5170:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5160:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5243:287:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5258:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5289:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5300:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5285:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5285:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5272:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5272:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5262:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5351:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5353:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5353:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5353:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5323:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5320:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5320:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "5317:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5448:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5492:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5503:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5488:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5512:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5458:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5448:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4666:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4677:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4689:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4697:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4705:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4713:6:8",
														"type": ""
													}
												],
												"src": "4594:943:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:52:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5623:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5645:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5628:16:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5628:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:36:8"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5594:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5601:3:8",
														"type": ""
													}
												],
												"src": "5543:115:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5760:122:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5770:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5782:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5770:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5848:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5872:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5806:41:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:69:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5806:69:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5732:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5744:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5755:4:8",
														"type": ""
													}
												],
												"src": "5664:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5970:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6075:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6077:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6077:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6077:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6044:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:30:8"
															},
															"nodeType": "YulIf",
															"src": "6041:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6107:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6127:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6115:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6107:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6169:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6181:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6187:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6169:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5954:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5965:4:8",
														"type": ""
													}
												],
												"src": "5888:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6304:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6304:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6304:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6205:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6447:608:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6457:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6482:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6482:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6466:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6457:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6556:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6567:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6560:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6589:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6582:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6582:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6612:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6623:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6645:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6663:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6675:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6683:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6671:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6649:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6717:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6731:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6731:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6731:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6704:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6712:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6701:15:8"
															},
															"nodeType": "YulIf",
															"src": "6698:122:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6905:144:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6920:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6924:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6962:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6988:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7000:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6967:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6955:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6955:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6955:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7018:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7029:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7034:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7025:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7025:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7018:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6858:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6863:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6855:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6871:25:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6873:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6889:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6880:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6880:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6873:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6833:21:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6835:17:8",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6846:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6839:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6829:220:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6417:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6425:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6433:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6441:5:8",
														"type": ""
													}
												],
												"src": "6345:710:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7155:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7204:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7206:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7206:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7206:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7183:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7191:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7179:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7179:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7198:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7175:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7168:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:35:8"
															},
															"nodeType": "YulIf",
															"src": "7165:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7296:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7310:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7300:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7339:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7415:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7423:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7411:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7430:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7348:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7339:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7133:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7141:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7149:5:8",
														"type": ""
													}
												],
												"src": "7078:370:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7647:1316:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7694:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7696:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7696:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7696:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7668:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7677:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7689:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7660:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:33:8"
															},
															"nodeType": "YulIf",
															"src": "7657:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7787:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7802:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7816:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7806:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7831:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7866:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7877:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7862:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7862:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7886:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7841:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7831:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7914:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7929:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7933:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7959:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7994:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8005:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7990:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7990:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8014:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7969:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7959:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8042:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8057:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8088:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8099:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8084:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8084:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8071:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8061:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8150:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8152:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8152:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8152:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8122:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8130:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8119:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8119:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8116:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8247:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8307:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8318:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8303:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8303:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8327:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8257:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8257:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8247:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8355:303:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8370:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8401:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8412:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8397:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8397:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8384:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8384:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8374:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8463:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8465:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8465:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8465:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8435:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8443:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8432:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8429:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8560:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8620:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8631:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8616:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8616:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8640:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8570:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8560:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8668:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8683:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8714:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8725:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8710:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8710:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8697:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8697:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8687:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8777:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8779:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8779:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8779:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8749:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8746:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8746:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "8743:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8874:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8918:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8929:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8914:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8914:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8938:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8884:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8884:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8874:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7585:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7596:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7608:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7616:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7624:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7632:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7640:6:8",
														"type": ""
													}
												],
												"src": "7454:1509:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9112:946:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9159:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9161:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9161:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9161:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9133:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9129:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9154:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9125:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:33:8"
															},
															"nodeType": "YulIf",
															"src": "9122:120:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9252:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9267:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9281:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9271:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9296:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9331:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9342:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9327:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9327:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9351:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9306:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9306:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9296:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9379:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9394:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9408:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9398:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9424:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9459:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9470:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9455:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9455:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9479:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9434:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9424:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9507:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9522:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9526:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9552:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9587:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9598:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9583:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9583:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9607:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9562:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9562:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9552:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9635:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9650:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9664:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9654:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9680:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9715:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9726:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9711:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9711:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9735:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9690:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9690:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9680:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9763:288:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9778:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9809:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9820:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9805:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9805:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9792:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9782:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9872:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9874:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9874:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9874:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9844:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9841:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9841:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "9838:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9969:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10013:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10024:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10009:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10009:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10033:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9979:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9979:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9969:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9050:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9061:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9073:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9081:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9089:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9097:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9105:6:8",
														"type": ""
													}
												],
												"src": "8969:1089:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c806301ffc9a71461004f578063150b7a021461008c578063bc197c81146100c9578063f23a6e61146101065761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906102d1565b610143565b6040516100839190610319565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae919061050e565b6101bd565b6040516100c091906105a0565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610683565b6101d1565b6040516100fd91906105a0565b60405180910390f35b34801561011257600080fd5b5061012d60048036038101906101289190610752565b6101e6565b60405161013a91906105a0565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101b657506101b5826101fb565b5b9050919050565b600063150b7a0260e01b9050949350505050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102ae81610279565b81146102b957600080fd5b50565b6000813590506102cb816102a5565b92915050565b6000602082840312156102e7576102e661026f565b5b60006102f5848285016102bc565b91505092915050565b60008115159050919050565b610313816102fe565b82525050565b600060208201905061032e600083018461030a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000819050919050565b6103a581610392565b81146103b057600080fd5b50565b6000813590506103c28161039c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041b826103d2565b810181811067ffffffffffffffff8211171561043a576104396103e3565b5b80604052505050565b600061044d610265565b90506104598282610412565b919050565b600067ffffffffffffffff821115610479576104786103e3565b5b610482826103d2565b9050602081019050919050565b82818337600083830152505050565b60006104b16104ac8461045e565b610443565b9050828152602081018484840111156104cd576104cc6103cd565b5b6104d884828561048f565b509392505050565b600082601f8301126104f5576104f46103c8565b5b813561050584826020860161049e565b91505092915050565b600080600080608085870312156105285761052761026f565b5b60006105368782880161037d565b94505060206105478782880161037d565b9350506040610558878288016103b3565b925050606085013567ffffffffffffffff81111561057957610578610274565b5b610585878288016104e0565b91505092959194509250565b61059a81610279565b82525050565b60006020820190506105b56000830184610591565b92915050565b600067ffffffffffffffff8211156105d6576105d56103e3565b5b602082029050602081019050919050565b600080fd5b60006105ff6105fa846105bb565b610443565b90508083825260208201905060208402830185811115610622576106216105e7565b5b835b8181101561064b578061063788826103b3565b845260208401935050602081019050610624565b5050509392505050565b600082601f83011261066a576106696103c8565b5b813561067a8482602086016105ec565b91505092915050565b600080600080600060a0868803121561069f5761069e61026f565b5b60006106ad8882890161037d565b95505060206106be8882890161037d565b945050604086013567ffffffffffffffff8111156106df576106de610274565b5b6106eb88828901610655565b935050606086013567ffffffffffffffff81111561070c5761070b610274565b5b61071888828901610655565b925050608086013567ffffffffffffffff81111561073957610738610274565b5b610745888289016104e0565b9150509295509295909350565b600080600080600060a0868803121561076e5761076d61026f565b5b600061077c8882890161037d565b955050602061078d8882890161037d565b945050604061079e888289016103b3565b93505060606107af888289016103b3565b925050608086013567ffffffffffffffff8111156107d0576107cf610274565b5b6107dc888289016104e0565b915050929550929590935056fea26469706673582212201cc5a21a2841e21d0de6779b35fe180d0926b0139e6ac146aa8e811f1aeec9ec64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x106 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1B6 JUMPI POP PUSH2 0x1B5 DUP3 PUSH2 0x1FB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x279 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CB DUP2 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41B DUP3 PUSH2 0x3D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3CD JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 PUSH2 0x48F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x505 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x547 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x558 DUP8 DUP3 DUP9 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x579 JUMPI PUSH2 0x578 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x585 DUP8 DUP3 DUP9 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF PUSH2 0x5FA DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x5E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 PUSH2 0x637 DUP9 DUP3 PUSH2 0x3B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x67A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6BE DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x718 DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x745 DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH2 0x76D PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x78D DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x79E DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7AF DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x7DC DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC5 LOG2 BYTE 0x28 COINBASE 0xE2 SAR 0xD 0xE6 PUSH24 0x9B35FE180D0926B0139E6AC146AA8E811F1AEEC9EC64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "214:161:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:162:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:2;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;603:162:4:-;703:6;728:30;;;721:37;;603:162;;;;;;:::o;724:247:1:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:5:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:102;2668:6;2719:2;2715:7;2710:2;2703:5;2699:14;2695:28;2685:38;;2627:102;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15;2921:281;3004:27;3026:4;3004:27;:::i;:::-;2996:6;2992:40;3134:6;3122:10;3119:22;3098:18;3086:10;3083:34;3080:62;3077:88;;;3145:18;;:::i;:::-;3077:88;3185:10;3181:2;3174:22;2964:238;2921:281;;:::o;3208:129::-;3242:6;3269:20;;:::i;:::-;3259:30;;3298:33;3326:4;3318:6;3298:33;:::i;:::-;3208:129;;;:::o;3343:307::-;3404:4;3494:18;3486:6;3483:30;3480:56;;;3516:18;;:::i;:::-;3480:56;3554:29;3576:6;3554:29;:::i;:::-;3546:37;;3638:4;3632;3628:15;3620:23;;3343:307;;;:::o;3656:146::-;3753:6;3748:3;3743;3730:30;3794:1;3785:6;3780:3;3776:16;3769:27;3656:146;;;:::o;3808:423::-;3885:5;3910:65;3926:48;3967:6;3926:48;:::i;:::-;3910:65;:::i;:::-;3901:74;;3998:6;3991:5;3984:21;4036:4;4029:5;4025:16;4074:3;4065:6;4060:3;4056:16;4053:25;4050:112;;;4081:79;;:::i;:::-;4050:112;4171:54;4218:6;4213:3;4208;4171:54;:::i;:::-;3891:340;3808:423;;;;;:::o;4250:338::-;4305:5;4354:3;4347:4;4339:6;4335:17;4331:27;4321:122;;4362:79;;:::i;:::-;4321:122;4479:6;4466:20;4504:78;4578:3;4570:6;4563:4;4555:6;4551:17;4504:78;:::i;:::-;4495:87;;4311:277;4250:338;;;;:::o;4594:943::-;4689:6;4697;4705;4713;4762:3;4750:9;4741:7;4737:23;4733:33;4730:120;;;4769:79;;:::i;:::-;4730:120;4889:1;4914:53;4959:7;4950:6;4939:9;4935:22;4914:53;:::i;:::-;4904:63;;4860:117;5016:2;5042:53;5087:7;5078:6;5067:9;5063:22;5042:53;:::i;:::-;5032:63;;4987:118;5144:2;5170:53;5215:7;5206:6;5195:9;5191:22;5170:53;:::i;:::-;5160:63;;5115:118;5300:2;5289:9;5285:18;5272:32;5331:18;5323:6;5320:30;5317:117;;;5353:79;;:::i;:::-;5317:117;5458:62;5512:7;5503:6;5492:9;5488:22;5458:62;:::i;:::-;5448:72;;5243:287;4594:943;;;;;;;:::o;5543:115::-;5628:23;5645:5;5628:23;:::i;:::-;5623:3;5616:36;5543:115;;:::o;5664:218::-;5755:4;5793:2;5782:9;5778:18;5770:26;;5806:69;5872:1;5861:9;5857:17;5848:6;5806:69;:::i;:::-;5664:218;;;;:::o;5888:311::-;5965:4;6055:18;6047:6;6044:30;6041:56;;;6077:18;;:::i;:::-;6041:56;6127:4;6119:6;6115:17;6107:25;;6187:4;6181;6177:15;6169:23;;5888:311;;;:::o;6205:117::-;6314:1;6311;6304:12;6345:710;6441:5;6466:81;6482:64;6539:6;6482:64;:::i;:::-;6466:81;:::i;:::-;6457:90;;6567:5;6596:6;6589:5;6582:21;6630:4;6623:5;6619:16;6612:23;;6683:4;6675:6;6671:17;6663:6;6659:30;6712:3;6704:6;6701:15;6698:122;;;6731:79;;:::i;:::-;6698:122;6846:6;6829:220;6863:6;6858:3;6855:15;6829:220;;;6938:3;6967:37;7000:3;6988:10;6967:37;:::i;:::-;6962:3;6955:50;7034:4;7029:3;7025:14;7018:21;;6905:144;6889:4;6884:3;6880:14;6873:21;;6829:220;;;6833:21;6447:608;;6345:710;;;;;:::o;7078:370::-;7149:5;7198:3;7191:4;7183:6;7179:17;7175:27;7165:122;;7206:79;;:::i;:::-;7165:122;7323:6;7310:20;7348:94;7438:3;7430:6;7423:4;7415:6;7411:17;7348:94;:::i;:::-;7339:103;;7155:293;7078:370;;;;:::o;7454:1509::-;7608:6;7616;7624;7632;7640;7689:3;7677:9;7668:7;7664:23;7660:33;7657:120;;;7696:79;;:::i;:::-;7657:120;7816:1;7841:53;7886:7;7877:6;7866:9;7862:22;7841:53;:::i;:::-;7831:63;;7787:117;7943:2;7969:53;8014:7;8005:6;7994:9;7990:22;7969:53;:::i;:::-;7959:63;;7914:118;8099:2;8088:9;8084:18;8071:32;8130:18;8122:6;8119:30;8116:117;;;8152:79;;:::i;:::-;8116:117;8257:78;8327:7;8318:6;8307:9;8303:22;8257:78;:::i;:::-;8247:88;;8042:303;8412:2;8401:9;8397:18;8384:32;8443:18;8435:6;8432:30;8429:117;;;8465:79;;:::i;:::-;8429:117;8570:78;8640:7;8631:6;8620:9;8616:22;8570:78;:::i;:::-;8560:88;;8355:303;8725:3;8714:9;8710:19;8697:33;8757:18;8749:6;8746:30;8743:117;;;8779:79;;:::i;:::-;8743:117;8884:62;8938:7;8929:6;8918:9;8914:22;8884:62;:::i;:::-;8874:72;;8668:288;7454:1509;;;;;;;;:::o;8969:1089::-;9073:6;9081;9089;9097;9105;9154:3;9142:9;9133:7;9129:23;9125:33;9122:120;;;9161:79;;:::i;:::-;9122:120;9281:1;9306:53;9351:7;9342:6;9331:9;9327:22;9306:53;:::i;:::-;9296:63;;9252:117;9408:2;9434:53;9479:7;9470:6;9459:9;9455:22;9434:53;:::i;:::-;9424:63;;9379:118;9536:2;9562:53;9607:7;9598:6;9587:9;9583:22;9562:53;:::i;:::-;9552:63;;9507:118;9664:2;9690:53;9735:7;9726:6;9715:9;9711:22;9690:53;:::i;:::-;9680:63;;9635:118;9820:3;9809:9;9805:19;9792:33;9852:18;9844:6;9841:30;9838:117;;;9874:79;;:::i;:::-;9838:117;9979:62;10033:7;10024:6;10013:9;10009:22;9979:62;:::i;:::-;9969:72;;9763:288;8969:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415800",
								"executionCost": "449",
								"totalCost": "416249"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 214,
									"end": 375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 375,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cc5a21a2841e21d0de6779b35fe180d0926b0139e6ac146aa8e811f1aeec9ec64736f6c63430008130033",
									".code": [
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "BC197C81"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "F23A6E61"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 375,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 721,
											"end": 758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2723,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2860,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3117,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3142,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3145,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 3202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3298,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3208,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3513,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3516,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3554,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3760,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3910,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4056,
											"end": 4072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4081,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4171,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 4231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4331,
											"end": 4358,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4362,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4486,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4504,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4311,
											"end": 4588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 4711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4765,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4748,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4760,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4733,
											"end": 4766,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4769,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4914,
											"end": 4967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4967,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5016,
											"end": 5018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5087,
											"end": 5094,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5042,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5191,
											"end": 5213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5170,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5223,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5289,
											"end": 5298,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5350,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5353,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5512,
											"end": 5519,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5501,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5458,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5243,
											"end": 5530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 5537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5628,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5623,
											"end": 5626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5870,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5806,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6073,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6074,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 6077,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6107,
											"end": 6132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 6199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6322,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6205,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6316,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6482,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 6466,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6603,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6630,
											"end": 6634,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6619,
											"end": 6635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6688,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6715,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 6710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6716,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6731,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6870,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 7000,
											"end": 7003,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6988,
											"end": 6998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 6967,
											"end": 7004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6955,
											"end": 7005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7032,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7025,
											"end": 7039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 7049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 6894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6447,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6447,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 7055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7195,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7183,
											"end": 7189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7179,
											"end": 7196,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7202,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7206,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7310,
											"end": 7330,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 7348,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7155,
											"end": 7448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7608,
											"end": 7614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 7677,
											"end": 7686,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7687,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7660,
											"end": 7693,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7696,
											"end": 7775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7886,
											"end": 7893,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7841,
											"end": 7894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 7894,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 7894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 7904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7943,
											"end": 7945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8014,
											"end": 8021,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8003,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7969,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8022,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7959,
											"end": 8022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 8032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8071,
											"end": 8103,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 8152,
											"end": 8231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8327,
											"end": 8334,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8316,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8303,
											"end": 8325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 8257,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8335,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8042,
											"end": 8345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8416,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8435,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8462,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 8465,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8640,
											"end": 8647,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 8570,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8728,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8714,
											"end": 8723,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8697,
											"end": 8730,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8749,
											"end": 8755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8746,
											"end": 8776,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 8779,
											"end": 8858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8918,
											"end": 8927,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 8884,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8874,
											"end": 8946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8874,
											"end": 8946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8668,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9089,
											"end": 9095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9140,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9158,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9161,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 9351,
											"end": 9358,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 9306,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9359,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9252,
											"end": 9369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9408,
											"end": 9410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 9479,
											"end": 9486,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9470,
											"end": 9476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9468,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 9434,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9379,
											"end": 9497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9583,
											"end": 9605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 9562,
											"end": 9615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9615,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9507,
											"end": 9625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9666,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9735,
											"end": 9742,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 9690,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9680,
											"end": 9743,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9680,
											"end": 9743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9823,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9825,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 9874,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 10033,
											"end": 10040,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 9979,
											"end": 10041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 10041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 10041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9763,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8969,
											"end": 10058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"dynamic_nft/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dynamic_nft/MinimalReceiver.sol\":\"MinimalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x67ef46fef257faae47adb630aad49694dda0334e5f7a7c5fb386243b974886b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c63284cf05ff845109190961e72ca27bd6a7b997f053d2ce21db83e9e285085c\",\"dweb:/ipfs/QmQBQVYJRzscToP6YaTRDvwYeLmr4V7kD1PjoG9mRpUYzU\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"dynamic_nft/MinimalReceiver.sol\":{\"keccak256\":\"0x52ed32f054abbb44b67cd3a44d153d0e20e96d22ab69e8f0de8488d0be63823b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://485b5542e36a819410355dfcbaae6e4ed492fdd57b65c27643bb38e9aa590490\",\"dweb:/ipfs/QmPwg8rsLqkb3BkwT9wL3eHiqVgELmptKbycUxLQzycyVs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							206
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 41,
							"sourceUnit": 207,
							"src": "143:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"262:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "262:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 40,
							"linearizedBaseContracts": [
								40,
								206
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1211:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1234:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 15,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1278:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 18,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:0"
									},
									"scope": 40,
									"src": "1107:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2332:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2380:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2412:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 30,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 31,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2447:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 33,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2491:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 36,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:0"
									},
									"scope": 40,
									"src": "2291:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "232:2269:0",
							"usedErrors": []
						}
					],
					"src": "118:2384:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							91
						],
						"ERC1155Receiver": [
							125
						],
						"ERC165": [
							194
						],
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							206
						]
					},
					"id": 92,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 92,
							"sourceUnit": 126,
							"src": "146:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 45,
										"name": "ERC1155Receiver",
										"nameLocations": [
											"477:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "477:15:1"
									},
									"id": 46,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:1"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 44,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:1",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91,
								125,
								40,
								194,
								206
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										21
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "663:55:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 62,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$91",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "685:17:1",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "680:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "703:8:1",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "673:38:1"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 58,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:1"
									},
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "552:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "569:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "586:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "603:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 59,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:1"
									},
									"scope": 91,
									"src": "499:219:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "911:60:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 85,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$91",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "933:22:1",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "928:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "956:8:1",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 84,
												"id": 88,
												"nodeType": "Return",
												"src": "921:43:1"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 81,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:1"
									},
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "765:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "782:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "799:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 72,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 73,
													"nodeType": "ArrayTypeName",
													"src": "799:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "825:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 75,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 76,
													"nodeType": "ArrayTypeName",
													"src": "825:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "851:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "903:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 82,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:1"
									},
									"scope": 91,
									"src": "724:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 92,
							"src": "451:522:1",
							"usedErrors": []
						}
					],
					"src": "121:853:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							125
						],
						"ERC165": [
							194
						],
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							206
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 94,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 41,
							"src": "133:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 195,
							"src": "167:49:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "ERC165",
										"nameLocations": [
											"295:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "295:6:2"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:2"
								},
								{
									"baseName": {
										"id": 99,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"303:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 40,
										"src": "303:16:2"
									},
									"id": 100,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:2"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								40,
								194,
								206
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										193,
										205
									],
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "495:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 111,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 113,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "532:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$40_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$40_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 112,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$40",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "550:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 119,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "589:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 117,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$125_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "571:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 193,
															"src": "565:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 110,
												"id": 122,
												"nodeType": "Return",
												"src": "505:96:2"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 107,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 105,
												"name": "ERC165",
												"nameLocations": [
													"463:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 194,
												"src": "463:6:2"
											},
											{
												"id": 106,
												"name": "IERC165",
												"nameLocations": [
													"471:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 206,
												"src": "471:7:2"
											}
										],
										"src": "454:25:2"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "414:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 102,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "489:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:2"
									},
									"scope": 125,
									"src": "387:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 126,
							"src": "258:352:2",
							"usedErrors": []
						}
					],
					"src": "108:503:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 128,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 143,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 144,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							170
						],
						"IERC721Receiver": [
							143
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 171,
							"sourceUnit": 144,
							"src": "144:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "IERC721Receiver",
										"nameLocations": [
											"439:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 143,
										"src": "439:15:4"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "439:15:4"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "178:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170,
								143
							],
							"name": "ERC721Holder",
							"nameLocation": "423:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "711:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 164,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "728:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$170",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "733:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 169,
														"src": "728:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "750:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "728:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 163,
												"id": 167,
												"nodeType": "Return",
												"src": "721:37:4"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "461:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "612:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "685:8:4"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "629:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "638:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "647:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "656:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:41:4"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "703:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:8:4"
									},
									"scope": 170,
									"src": "603:162:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 171,
							"src": "414:353:4",
							"usedErrors": []
						}
					],
					"src": "119:649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							194
						],
						"IERC165": [
							206
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 207,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "754:7:5"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								206
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										205
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 187,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$206_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$206_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 186,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$206",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 184,
												"id": 191,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 178,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 194,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 195,
							"src": "726:260:5",
							"usedErrors": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							206
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 206,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"dynamic_nft/MinimalReceiver.sol": {
				"ast": {
					"absolutePath": "dynamic_nft/MinimalReceiver.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							91
						],
						"ERC1155Receiver": [
							125
						],
						"ERC165": [
							194
						],
						"ERC721Holder": [
							170
						],
						"IERC1155Receiver": [
							40
						],
						"IERC165": [
							206
						],
						"IERC721Receiver": [
							143
						],
						"MinimalReceiver": [
							220
						]
					},
					"id": 221,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 171,
							"src": "68:69:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 92,
							"src": "139:71:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 211,
										"name": "ERC721Holder",
										"nameLocations": [
											"242:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "242:12:7"
									},
									"id": 212,
									"nodeType": "InheritanceSpecifier",
									"src": "242:12:7"
								},
								{
									"baseName": {
										"id": 213,
										"name": "ERC1155Holder",
										"nameLocations": [
											"256:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "256:13:7"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "256:13:7"
								}
							],
							"canonicalName": "MinimalReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								91,
								125,
								40,
								194,
								206,
								170,
								143
							],
							"name": "MinimalReceiver",
							"nameLocation": "223:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "370:2:7",
										"statements": []
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "277:52:7",
										"text": " @dev Allows all Ether transfers"
									},
									"id": 219,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:7"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:0:7"
									},
									"scope": 220,
									"src": "335:37:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 221,
							"src": "214:161:7",
							"usedErrors": []
						}
					],
					"src": "40:335:7"
				},
				"id": 7
			}
		}
	}
}